{"createdAt":"2025-06-16T07:59:28.599Z","updatedAt":"2025-06-16T08:24:00.808Z","id":"wWDtpzsLuFuXk6Mt","name":"Backup Workflows to GitHub","active":false,"isArchived":true,"nodes":[{"parameters":{},"id":"e3fb5a1f-a72d-4ae4-91e3-4bd32a9966b6","name":"On clicking 'execute'","type":"n8n-nodes-base.manualTrigger","position":[480,80],"typeVersion":1},{"parameters":{"content":"## Subworkflow","height":731.7039821513649,"width":1910.7813046051347,"color":6},"id":"cb49c48d-a0ae-4f49-bb21-e6cfa2c6daaa","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","position":[0,460],"typeVersion":1},{"parameters":{},"id":"c05316f2-7944-4d92-8282-94451d8fc5fc","name":"Execute Workflow Trigger","type":"n8n-nodes-base.executeWorkflowTrigger","position":[60,840],"typeVersion":1},{"parameters":{"filters":{},"requestOptions":{}},"id":"5eb6ec73-4d65-4683-8e86-0371e7a91fd6","name":"n8n","type":"n8n-nodes-base.n8n","position":[880,180],"typeVersion":1},{"parameters":{"assignments":{"assignments":[{"id":"8d513345-6484-431f-afb7-7cf045c90f4f","name":"Done","type":"boolean","value":true}]},"options":{}},"id":"164547d1-423b-475f-a9fc-c1d9458d5740","name":"Return","type":"n8n-nodes-base.set","position":[1720,660],"typeVersion":3.3},{"parameters":{"url":"={{ $json.download_url }}","options":{}},"id":"09784065-0aaa-47cb-9a9c-75ad6332c524","name":"Get File","type":"n8n-nodes-base.httpRequest","position":[680,540],"typeVersion":4.2},{"parameters":{"conditions":{"options":{"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"45ce825e-9fa6-430c-8931-9aaf22c42585","operator":{"type":"string","operation":"empty","singleValue":true},"leftValue":"={{ $json.content }}","rightValue":""},{"id":"9619a55f-7fb1-4f24-b1a7-7aeb82365806","operator":{"type":"string","operation":"notExists","singleValue":true},"leftValue":"={{ $json.error }}","rightValue":""}]},"options":{}},"id":"4086bd6a-7b71-4ee1-9527-a01943ecb647","name":"If file too large","type":"n8n-nodes-base.if","position":[440,560],"typeVersion":2},{"parameters":{},"id":"e21d2d83-7366-4071-9bc7-716c1be4b4eb","name":"Merge Items","type":"n8n-nodes-base.merge","position":[440,820],"typeVersion":2},{"parameters":{"jsCode":"const orderJsonKeys = (jsonObj) => {\n  const ordered = {};\n  Object.keys(jsonObj).sort().forEach(key => {\n    ordered[key] = jsonObj[key];\n  });\n  return ordered;\n}\n\n// Check if file returned with content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Decode base64 content and parse JSON\n  const origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64').toString());\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n// No file returned / new workflow\n} else if (Object.keys($input.all()[0].json).includes(\"data\")) {\n  const origWorkflow = JSON.parse($input.all()[0].json.data);\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n\n} else {\n  // Order JSON object\n  const n8nWorkflow = $input.all()[1].json;\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n  \n  // Proper formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return items\nreturn $input.all();\n"},"id":"a160239c-8d59-4791-b18a-2a8778438ab9","name":"isDiffOrNew","type":"n8n-nodes-base.code","position":[640,820],"typeVersion":1},{"parameters":{"dataType":"string","value1":"={{$json.github_status}}","rules":{"rules":[{"value2":"same"},{"value2":"different","output":1},{"value2":"new","output":2}]}},"id":"6434d988-56f3-42c5-9726-5a8b0d793f27","name":"Check Status","type":"n8n-nodes-base.switch","position":[1040,820],"typeVersion":1},{"parameters":{},"id":"0fb435f7-2142-43dc-bcec-4e6204eb8214","name":"Same file - Do nothing","type":"n8n-nodes-base.noOp","position":[1260,660],"typeVersion":1},{"parameters":{},"id":"5628cdfe-f58f-4d7f-8657-e8730a305421","name":"File is different","type":"n8n-nodes-base.noOp","position":[1260,820],"typeVersion":1},{"parameters":{},"id":"e541bc13-b439-436f-97ca-ed7688d7bb54","name":"File is new","type":"n8n-nodes-base.noOp","position":[1260,1020],"typeVersion":1},{"parameters":{"resource":"file","owner":{"__rl":true,"mode":"","value":"={{ $('Config').first().item.repo_owner }}"},"repository":{"__rl":true,"mode":"","value":"={{ $('Config').first().item.repo_name }}"},"filePath":"={{ $('Config').first().item.repo_path }}{{ $json.subPath }}{{$('Execute Workflow Trigger').first().json.id}}.json","fileContent":"={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}","commitMessage":"={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"},"id":"3b62fe20-51af-4400-80d1-705d3565c47e","name":"Create new file","type":"n8n-nodes-base.github","position":[1480,1020],"typeVersion":1,"webhookId":"f626638f-36a2-40c0-bbb4-2c74cea6b3ee","credentials":{"githubApi":{"id":"KBH9KG8I0VZ6x3LD","name":"GitHub account"}}},{"parameters":{"resource":"file","operation":"edit","owner":{"__rl":true,"mode":"","value":"={{ $('Config').first().item.repo_owner }}"},"repository":{"__rl":true,"mode":"","value":"={{ $('Config').first().item.repo_name }}"},"filePath":"={{ $('Config').first().item.repo_path }}{{ $json.subPath }}{{$('Execute Workflow Trigger').first().json.id}}.json","fileContent":"={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}","commitMessage":"={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"},"id":"9396234f-6452-4778-b7c2-b5a6a4b84a45","name":"Edit existing file","type":"n8n-nodes-base.github","position":[1480,820],"typeVersion":1,"webhookId":"1c86dcbf-a0e1-41f2-8cc2-7addd23acab9","credentials":{"githubApi":{"id":"KBH9KG8I0VZ6x3LD","name":"GitHub account"}}},{"parameters":{"options":{}},"id":"a7f080e3-7781-48fd-b0c6-0d082b3a749e","name":"Loop Over Items","type":"n8n-nodes-base.splitInBatches","position":[1080,180],"typeVersion":3},{"parameters":{"rule":{"interval":[{"triggerAtHour":1,"triggerAtMinute":33}]}},"id":"b5a6609d-f4a8-40ec-b350-dffe6398adb4","name":"Schedule Trigger","type":"n8n-nodes-base.scheduleTrigger","position":[480,280],"typeVersion":1.2},{"parameters":{"assignments":{"assignments":[{"id":"dae43d3b-56e5-4098-b602-862ebf5cd073","name":"subPath","type":"string","value":"={{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[0] }}/{{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[1] }}/"}]},"includeOtherFields":true,"options":{}},"id":"ca2eb414-d801-4d62-b330-75e5d4c89f27","name":"Create sub path","type":"n8n-nodes-base.set","position":[840,820],"typeVersion":3.3},{"parameters":{"content":"## Backup to GitHub \nThis workflow will backup all instance workflows to GitHub every 24 hours.\n\nThe files are saved into folders using `YYYY/MM/` for the directory path and `ID.json` for the filename.\n\nThe Repo Owner, Repo Name and Main folder are set using the **Variables** feature but can be replaced with the `Config` node in the subworkflow. \n\nThe workflow runs calls itself to help reduce memory usage, Once the workflow has completed it will send an optional notification to Slack.\n\n### Time to Run\nTested with 1423 workflows on `1.44.1` it took under 30 minutes for the first run and under 12 minutes once the initial run is complete.","height":417,"width":385,"color":4},"id":"bc07e1f0-9560-4ad3-85d8-2e4c9231c8a6","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","position":[0,0],"typeVersion":1},{"parameters":{"content":"## Main workflow loop","height":416.1856906618075,"width":1272.6408145680155,"color":7},"id":"43ad96bd-a6d7-4cd7-9536-f10525de0677","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","position":[440,0],"typeVersion":1},{"parameters":{"select":"channel","channelId":{"__rl":true,"mode":"name","value":"#notifications"},"text":"=:information_source:  Starting Workflow Backup [{{ $execution.id }}]","otherOptions":{"includeLinkToWorkflow":false}},"id":"c12b368a-a5b5-4819-a6a3-5ce2b666bcc8","name":"Starting Message","type":"n8n-nodes-base.slack","position":[720,180],"webhookId":"c02eb407-5547-4aa0-9ebf-46dab67b63b6","typeVersion":2.2},{"parameters":{"workflowId":"={{ $workflow.id }}","mode":"each","options":{}},"id":"0750caf8-1427-43d1-84fe-cdfc57922d79","name":"Execute Workflow","type":"n8n-nodes-base.executeWorkflow","position":[1300,200],"typeVersion":1,"onError":"continueErrorOutput"},{"parameters":{"select":"channel","channelId":{"__rl":true,"mode":"name","value":"#notifications"},"text":"=âœ… Backup has completed - {{ $('n8n').all().length }} workflows have been processed.","otherOptions":{}},"id":"7420fcb1-f700-4f59-9b7d-07494a6c6c8a","name":"Completed Notification","type":"n8n-nodes-base.slack","position":[1300,20],"webhookId":"a0c6e8c8-5d71-40fa-b02b-63a7ed5726c4","executeOnce":true,"typeVersion":2.2},{"parameters":{"select":"channel","channelId":{"__rl":true,"mode":"name","value":"#notifications"},"text":"=:x: Failed to backup {{ $('Loop Over Items').item.json.id }}","otherOptions":{"includeLinkToWorkflow":false}},"id":"e751e280-0ad1-41b4-8f98-d0fcc86a2171","name":"Failed Flows","type":"n8n-nodes-base.slack","position":[1500,220],"webhookId":"2a092edb-de12-490f-931b-34d70e7d7696","typeVersion":2.2},{"parameters":{"resource":"file","operation":"get","owner":{"__rl":true,"value":"= {{ $json.repo_owner }}","mode":""},"repository":{"__rl":true,"value":"={{ $json.repo_name }}","mode":""},"filePath":"={{ $('Config').first().item.repo_path }}{{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[0] }}/{{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[1] }}/{{$json.id}}.json","asBinaryProperty":false,"additionalParameters":{}},"id":"311afb8e-a141-4e88-8a04-0bc2e4ec83dc","name":"Get file data","type":"n8n-nodes-base.github","position":[240,560],"typeVersion":1,"alwaysOutputData":true,"webhookId":"40624b7c-7b65-4361-9f14-c6c9680b5b9f","credentials":{"githubApi":{"id":"KBH9KG8I0VZ6x3LD","name":"GitHub account"}},"continueOnFail":true},{"parameters":{"assignments":{"assignments":[{"id":"8f6d1741-772f-462a-811f-4c334185e4f0","name":"repo_owner","type":"string","value":"=nathankwok"},{"id":"8cac215c-4fd7-422f-9fd2-6b2d1e5e0383","name":"repo_name","type":"string","value":"=n8n-workflows"},{"id":"eee305e9-4164-462a-86bd-80f0d58a31ae","name":"repo_path","type":"string","value":"=nathankwok/n8n-workflows"}]},"includeOtherFields":true,"options":{}},"id":"c62976a2-8862-4f3c-9b2d-ce110fa386b0","name":"Config","type":"n8n-nodes-base.set","position":[240,840],"typeVersion":3.4}],"connections":{"n8n":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Config":{"main":[[{"node":"Get file data","type":"main","index":0},{"node":"Merge Items","type":"main","index":1}]]},"Get File":{"main":[[{"node":"Merge Items","type":"main","index":0}]]},"File is new":{"main":[[{"node":"Create new file","type":"main","index":0}]]},"Merge Items":{"main":[[{"node":"isDiffOrNew","type":"main","index":0}]]},"isDiffOrNew":{"main":[[{"node":"Create sub path","type":"main","index":0}]]},"Check Status":{"main":[[{"node":"Same file - Do nothing","type":"main","index":0}],[{"node":"File is different","type":"main","index":0}],[{"node":"File is new","type":"main","index":0}]]},"Failed Flows":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Get file data":{"main":[[{"node":"If file too large","type":"main","index":0}]]},"Create new file":{"main":[[{"node":"Return","type":"main","index":0}]]},"Create sub path":{"main":[[{"node":"Check Status","type":"main","index":0}]]},"Loop Over Items":{"main":[[{"node":"Completed Notification","type":"main","index":0}],[{"node":"Execute Workflow","type":"main","index":0}]]},"Execute Workflow":{"main":[[{"node":"Loop Over Items","type":"main","index":0}],[{"node":"Failed Flows","type":"main","index":0}]]},"Schedule Trigger":{"main":[[{"node":"Starting Message","type":"main","index":0}]]},"Starting Message":{"main":[[{"node":"n8n","type":"main","index":0}]]},"File is different":{"main":[[{"node":"Edit existing file","type":"main","index":0}]]},"If file too large":{"main":[[{"node":"Get File","type":"main","index":0}],[{"node":"Merge Items","type":"main","index":0}]]},"Edit existing file":{"main":[[{"node":"Return","type":"main","index":0}]]},"On clicking 'execute'":{"main":[[{"node":"Starting Message","type":"main","index":0}]]},"Same file - Do nothing":{"main":[[{"node":"Return","type":"main","index":0}]]},"Execute Workflow Trigger":{"main":[[{"node":"Config","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{},"versionId":"04e78c4e-cf5f-466d-8f86-fc16699f65e9","triggerCount":0,"tags":[]}