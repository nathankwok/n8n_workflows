{"createdAt":"2025-06-16T08:22:19.828Z","updatedAt":"2025-06-17T07:34:49.664Z","id":"q1xiiiMxbpKaJsPJ","name":"Backup Workflows to GitHub","active":false,"isArchived":false,"nodes":[{"parameters":{"resource":"file","operation":"get","owner":"={{$node[\"Globals\"].json[\"repo\"][\"owner\"]}}","repository":"={{$node[\"Globals\"].json[\"repo\"][\"name\"]}}","filePath":"={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{$json[\"name\"]}}.json","asBinaryProperty":false,"additionalParameters":{}},"id":"4db84afd-98e2-4bc0-85e2-a1eaf49a3897","name":"GitHub","type":"n8n-nodes-base.github","position":[800,-200],"typeVersion":1,"alwaysOutputData":true,"webhookId":"e8d85f6b-55e5-41c7-8e41-876447e46fc2","credentials":{"githubApi":{"id":"KBH9KG8I0VZ6x3LD","name":"GitHub account"}},"continueOnFail":true},{"parameters":{"values":{"string":[{"name":"repo.owner","value":"nathankwok"},{"name":"repo.name","value":"n8n_workflows"},{"name":"repo.path","value":"workflows/"}]},"options":{}},"id":"9382e119-1e22-40d8-9a53-f14fb7cb8cb7","name":"Globals","type":"n8n-nodes-base.set","position":[100,-280],"typeVersion":1},{"parameters":{"filters":{},"requestOptions":{}},"id":"5e2b997d-cdce-44b1-85fa-60f205a888b5","name":"n8n","type":"n8n-nodes-base.n8n","position":[340,-280],"typeVersion":1,"credentials":{"n8nApi":{"id":"RqX64FhD5jWjRPpF","name":"n8n account"}}},{"parameters":{"options":{}},"id":"f6eef8c1-ce35-4c0f-a48e-75338fc78317","name":"Loop Over Items","type":"n8n-nodes-base.splitInBatches","position":[560,-280],"executeOnce":false,"typeVersion":3},{"parameters":{"conditions":{"options":{"version":2,"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"16a9182d-059d-4774-ba95-654fb4293fdb","operator":{"type":"string","operation":"notExists","singleValue":true},"leftValue":"={{ $json.error }}","rightValue":""}]},"options":{}},"id":"de1b9fd9-c620-437c-a297-ca649ae8770e","name":"If","type":"n8n-nodes-base.if","position":[1000,-200],"typeVersion":2.2},{"parameters":{"conditions":{"options":{"version":2,"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"e0c66624-429a-4f1f-bf7b-1cc1b32bad7b","operator":{"type":"string","operation":"notEquals"},"leftValue":"={{ $json.content }}","rightValue":"={{ $('Loop Over Items').item.json.toJsonString() }}"}]},"options":{}},"id":"17847d82-603e-419a-a7cf-f59d651fec96","name":"If1","type":"n8n-nodes-base.if","position":[1880,100],"typeVersion":2.2},{"parameters":{"jsCode":"let items = $input.all()\n\nfor (item of items) {\n    item.json.content = Buffer.from(item.json.content, 'base64').toString('utf8')\n}\n\nreturn items;\n"},"id":"4895b3d4-cf30-46e3-9567-c66d8e87a070","name":"Code","type":"n8n-nodes-base.code","position":[1560,-220],"typeVersion":2},{"parameters":{"resource":"file","owner":"={{$node[\"Globals\"].json[\"repo\"][\"owner\"]}}","repository":"={{$node[\"Globals\"].json[\"repo\"][\"name\"]}}","filePath":"={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{ $('Loop Over Items').item.json.name }}.json","fileContent":"={{ $('Loop Over Items').item.json.toJsonString()  }}","commitMessage":"=[N8N Backup] {{ $('Loop Over Items').item.json.name }}.json"},"id":"e1e21c66-8201-4c9a-8dae-f6802df56f7a","name":"Create new file and commit","type":"n8n-nodes-base.github","position":[1180,-40],"typeVersion":1,"webhookId":"e017af62-aeb5-4b55-a3c6-3fcd2da1fc16","credentials":{"githubApi":{"id":"KBH9KG8I0VZ6x3LD","name":"GitHub account"}}},{"parameters":{"resource":"file","operation":"edit","owner":"={{$node[\"Globals\"].json[\"repo\"][\"owner\"]}}","repository":"={{$node[\"Globals\"].json[\"repo\"][\"name\"]}}","filePath":"={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{ $('Loop Over Items').item.json.name }}.json","fileContent":"={{ $('Loop Over Items').item.json.toJsonString()  }}","commitMessage":"=[N8N Backup] {{ $('Loop Over Items').item.json.name }}.json"},"id":"56fba9ea-1333-418d-8578-fe3ff35c46be","name":"Update file content and commit","type":"n8n-nodes-base.github","position":[2240,300],"typeVersion":1,"webhookId":"ac013b6b-2298-4480-9e28-2aba2f002846","credentials":{"githubApi":{"id":"KBH9KG8I0VZ6x3LD","name":"GitHub account"}}},{"parameters":{"rule":{"interval":[{"field":"hours","hoursInterval":2,"triggerAtMinute":30}]}},"id":"f3b7d82e-ab11-4c75-a6ee-7fcad50d53e6","name":"Schedule Trigger","type":"n8n-nodes-base.scheduleTrigger","position":[-120,-280],"typeVersion":1.2},{"parameters":{"content":"Workflow changes committed to the repository","height":80},"id":"d5a78154-1b36-4e48-9c92-b8109475de45","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","position":[2400,320],"typeVersion":1},{"parameters":{"content":"Check if there are any changes in the workflow","height":80},"id":"1db37204-c229-44a8-8c82-bb0c350e2dc1","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","position":[2020,100],"typeVersion":1},{"parameters":{"content":"Create a new file for the workflow","height":80},"id":"d97588a9-8525-4920-a37a-8e716d485b58","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","position":[1300,-20],"typeVersion":1},{"parameters":{"content":"Check if file exists in the repository","height":80},"id":"76136374-d9cd-4d19-aa0c-372adc9191d6","name":"Sticky Note3","type":"n8n-nodes-base.stickyNote","position":[1000,-300],"typeVersion":1},{"parameters":{"content":"Convert the file contents to JSON string","height":80},"id":"efc1d6d1-64e8-4f15-a1b4-b0e023c415ac","name":"Sticky Note4","type":"n8n-nodes-base.stickyNote","position":[1500,-320],"typeVersion":1},{"parameters":{"content":"Get all workflows","height":80},"id":"0377bd83-6f19-4197-9abb-5d136d183672","name":"Sticky Note5","type":"n8n-nodes-base.stickyNote","position":[280,-380],"typeVersion":1},{"parameters":{"content":"Set variables","height":80},"id":"aae8c75a-8cc2-4e4d-869f-74417f5b6701","name":"Sticky Note6","type":"n8n-nodes-base.stickyNote","position":[20,-140],"typeVersion":1}],"connections":{"If":{"main":[[{"node":"Code","type":"main","index":0}],[{"node":"Create new file and commit","type":"main","index":0}]]},"If1":{"main":[[{"node":"Update file content and commit","type":"main","index":0}],[{"node":"Loop Over Items","type":"main","index":0}]]},"n8n":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Code":{"main":[[{"node":"If1","type":"main","index":0}]]},"GitHub":{"main":[[{"node":"If","type":"main","index":0}]]},"Globals":{"main":[[{"node":"n8n","type":"main","index":0}]]},"Loop Over Items":{"main":[[],[{"node":"GitHub","type":"main","index":0}]]},"Schedule Trigger":{"main":[[{"node":"Globals","type":"main","index":0}]]},"Create new file and commit":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Update file content and commit":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{"Create new file and commit":[{"json":{"content":{"name":"My workflow.json","path":"workflows/My workflow.json","sha":"85e93ea81148d76fc8ecbdd7f2897031f7fbacb6","size":15530,"url":"https://api.github.com/repos/nathankwok/n8n-workflows/contents/workflows/My%20workflow.json?ref=main","html_url":"https://github.com/nathankwok/n8n-workflows/blob/main/workflows/My%20workflow.json","git_url":"https://api.github.com/repos/nathankwok/n8n-workflows/git/blobs/85e93ea81148d76fc8ecbdd7f2897031f7fbacb6","download_url":"https://raw.githubusercontent.com/nathankwok/n8n-workflows/main/workflows/My%20workflow.json?token=AAT3M2XQ6VHSZXB6KJLYZJLIJ7KEA","type":"file","_links":{"self":"https://api.github.com/repos/nathankwok/n8n-workflows/contents/workflows/My%20workflow.json?ref=main","git":"https://api.github.com/repos/nathankwok/n8n-workflows/git/blobs/85e93ea81148d76fc8ecbdd7f2897031f7fbacb6","html":"https://github.com/nathankwok/n8n-workflows/blob/main/workflows/My%20workflow.json"}},"commit":{"sha":"48ed992d80fbd20dd611ac204e6e79b4981e0689","node_id":"C_kwDOO8X9M9oAKDQ4ZWQ5OTJkODBmYmQyMGRkNjExYWMyMDRlNmU3OWI0OTgxZTA2ODk","url":"https://api.github.com/repos/nathankwok/n8n-workflows/git/commits/48ed992d80fbd20dd611ac204e6e79b4981e0689","html_url":"https://github.com/nathankwok/n8n-workflows/commit/48ed992d80fbd20dd611ac204e6e79b4981e0689","author":{"name":"Nathan Kwok","email":"2602602+nathankwok@users.noreply.github.com","date":"2025-06-16T08:21:24Z"},"committer":{"name":"Nathan Kwok","email":"2602602+nathankwok@users.noreply.github.com","date":"2025-06-16T08:21:24Z"},"tree":{"sha":"5e3bd02df8234268de88f222cbb92892c8a51fc4","url":"https://api.github.com/repos/nathankwok/n8n-workflows/git/trees/5e3bd02df8234268de88f222cbb92892c8a51fc4"},"message":"[N8N Backup] My workflow.json","parents":[{"sha":"9e28903ca1b1e240f4757cec65d03a5fe093b4fc","url":"https://api.github.com/repos/nathankwok/n8n-workflows/git/commits/9e28903ca1b1e240f4757cec65d03a5fe093b4fc","html_url":"https://github.com/nathankwok/n8n-workflows/commit/9e28903ca1b1e240f4757cec65d03a5fe093b4fc"}],"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}}}}],"GitHub":[{"json":{"error":"The resource you are requesting could not be found"}}],"n8n":[{"json":{"createdAt":"2025-06-11T20:26:38.406Z","updatedAt":"2025-06-11T21:27:12.050Z","id":"ykM0g56XcKzGPgCM","name":"My workflow 2","active":false,"isArchived":false,"nodes":[{"parameters":{"operation":"get","messageId":"={{ $json.id }}","simple":false,"options":{"downloadAttachments":true}},"type":"n8n-nodes-base.gmail","typeVersion":2.1,"position":[440,0],"id":"423bbb48-f72d-4150-b3d6-ec3238033ece","name":"Gmail","webhookId":"41ff8288-ea60-4e80-87d7-b00c53e8a935","retryOnFail":true,"executeOnce":false,"alwaysOutputData":true,"credentials":{"gmailOAuth2":{"id":"6qrDcdevVT45ACgs","name":"Gmail account"}}},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"50308731-2569-405e-80d1-ca8e93808974","leftValue":"={{ $('bmcreimbursements@mailrelayer.xyz emails').item.binary }}","rightValue":"","operator":{"type":"object","operation":"exists","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.filter","typeVersion":2.2,"position":[220,0],"id":"db544582-ffbd-4d1e-8bf8-94b788db3b8c","name":"Filter for only emails with attachments"},{"parameters":{"pollTimes":{"item":[{"mode":"everyX","value":5,"unit":"minutes"}]},"simple":false,"filters":{"q":"=to:bmcreimbursements@mailrelayer.xyz OR to:bmcreimbursement@mailrelayer.xyz OR reimbursements@mailrelayer.xyz OR reimbursement@mailrelayer.xyz","readStatus":"unread"},"options":{"downloadAttachments":true}},"type":"n8n-nodes-base.gmailTrigger","typeVersion":1.2,"position":[0,0],"id":"1720e6b2-75f0-4b23-9a36-1126cc15ea9c","name":"bmcreimbursements@mailrelayer.xyz emails","credentials":{"gmailOAuth2":{"id":"6qrDcdevVT45ACgs","name":"Gmail account"}},"notes":"Fetches unread emails sent to bmcreimbursements@mailrelayer.xyz (and other misspellings)"},{"parameters":{"assignments":{"assignments":[{"id":"4c08d0bf-420d-4769-831d-9bbb44b2d43c","name":"attachments","value":"={{ $('Gmail').item.binary.keys() }}","type":"array"},{"id":"9a50c33e-ac5f-42bb-bd49-8fd05bf66f83","name":"message_id","value":"={{ $json.id }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[700,-180],"id":"bf09a54e-9f12-4880-8a01-34b7120bc41b","name":"Edit Fields"},{"parameters":{"fieldToSplitOut":"attachments","include":"allOtherFields","options":{}},"type":"n8n-nodes-base.splitOut","typeVersion":1,"position":[940,-180],"id":"080d0aa3-ac00-4bab-a963-4d26cb31a9b6","name":"Split Out"},{"parameters":{"mode":"combine","advanced":true,"mergeByFields":{"values":[{"field1":"message_id","field2":"=id"}]},"options":{}},"type":"n8n-nodes-base.merge","typeVersion":3.2,"position":[1260,-20],"id":"3732d30d-156d-463a-bb96-92e9f2bb5243","name":"Merge","alwaysOutputData":true}],"connections":{"Filter for only emails with attachments":{"main":[[{"node":"Gmail","type":"main","index":0}]]},"bmcreimbursements@mailrelayer.xyz emails":{"main":[[{"node":"Filter for only emails with attachments","type":"main","index":0}]]},"Gmail":{"main":[[{"node":"Edit Fields","type":"main","index":0},{"node":"Merge","type":"main","index":1}]]},"Edit Fields":{"main":[[{"node":"Split Out","type":"main","index":0}]]},"Split Out":{"main":[[{"node":"Merge","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"830cffaf-1462-4d35-81f3-c75f95000a68","triggerCount":0,"tags":[]}},{"json":{"createdAt":"2024-02-23T16:58:31.616Z","updatedAt":"2024-02-23T16:58:31.616Z","id":"srOnR8PAY3u4RSwb","name":"Demo workflow","active":false,"isArchived":false,"nodes":[{"parameters":{},"id":"74003dcd-2ac7-4caa-a1cd-adecc5143c07","name":"Chat Trigger","type":"@n8n/n8n-nodes-langchain.chatTrigger","typeVersion":1,"position":[660,340],"webhookId":"cdb5c076-d458-4b9d-8398-f43bd25059b1"},{"parameters":{},"id":"ce8c3da4-899c-4cc4-af73-8096c64eec64","name":"Basic LLM Chain","type":"@n8n/n8n-nodes-langchain.chainLlm","typeVersion":1.3,"position":[880,340]},{"parameters":{"model":"llama3.2:latest","options":{}},"id":"3dee878b-d748-4829-ac0a-cfd6705d31e5","name":"Ollama Chat Model","type":"@n8n/n8n-nodes-langchain.lmChatOllama","typeVersion":1,"position":[900,560],"credentials":{"ollamaApi":{"id":"xHuYe0MDGOs9IpBW","name":"Local Ollama service"}}}],"connections":{"Chat Trigger":{"main":[[{"node":"Basic LLM Chain","type":"main","index":0}]]},"Ollama Chat Model":{"ai_languageModel":[[{"node":"Basic LLM Chain","type":"ai_languageModel","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"4e2affe6-bb1c-4ddc-92f9-dde0b7656796","triggerCount":0,"tags":[]}},{"json":{"createdAt":"2025-06-16T07:59:28.599Z","updatedAt":"2025-06-16T08:05:56.047Z","id":"wWDtpzsLuFuXk6Mt","name":"Backup Workflows to GitHub","active":false,"isArchived":false,"nodes":[{"parameters":{},"id":"e3fb5a1f-a72d-4ae4-91e3-4bd32a9966b6","name":"On clicking 'execute'","type":"n8n-nodes-base.manualTrigger","position":[480,80],"typeVersion":1},{"parameters":{"content":"## Subworkflow","height":731.7039821513649,"width":1910.7813046051347,"color":6},"id":"cb49c48d-a0ae-4f49-bb21-e6cfa2c6daaa","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","position":[0,460],"typeVersion":1},{"parameters":{},"id":"c05316f2-7944-4d92-8282-94451d8fc5fc","name":"Execute Workflow Trigger","type":"n8n-nodes-base.executeWorkflowTrigger","position":[60,840],"typeVersion":1},{"parameters":{"filters":{},"requestOptions":{}},"id":"5eb6ec73-4d65-4683-8e86-0371e7a91fd6","name":"n8n","type":"n8n-nodes-base.n8n","position":[880,180],"typeVersion":1},{"parameters":{"assignments":{"assignments":[{"id":"8d513345-6484-431f-afb7-7cf045c90f4f","name":"Done","type":"boolean","value":true}]},"options":{}},"id":"164547d1-423b-475f-a9fc-c1d9458d5740","name":"Return","type":"n8n-nodes-base.set","position":[1720,660],"typeVersion":3.3},{"parameters":{"url":"={{ $json.download_url }}","options":{}},"id":"09784065-0aaa-47cb-9a9c-75ad6332c524","name":"Get File","type":"n8n-nodes-base.httpRequest","position":[680,540],"typeVersion":4.2},{"parameters":{"conditions":{"options":{"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"45ce825e-9fa6-430c-8931-9aaf22c42585","operator":{"type":"string","operation":"empty","singleValue":true},"leftValue":"={{ $json.content }}","rightValue":""},{"id":"9619a55f-7fb1-4f24-b1a7-7aeb82365806","operator":{"type":"string","operation":"notExists","singleValue":true},"leftValue":"={{ $json.error }}","rightValue":""}]},"options":{}},"id":"4086bd6a-7b71-4ee1-9527-a01943ecb647","name":"If file too large","type":"n8n-nodes-base.if","position":[440,560],"typeVersion":2},{"parameters":{},"id":"e21d2d83-7366-4071-9bc7-716c1be4b4eb","name":"Merge Items","type":"n8n-nodes-base.merge","position":[440,820],"typeVersion":2},{"parameters":{"jsCode":"const orderJsonKeys = (jsonObj) => {\n  const ordered = {};\n  Object.keys(jsonObj).sort().forEach(key => {\n    ordered[key] = jsonObj[key];\n  });\n  return ordered;\n}\n\n// Check if file returned with content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Decode base64 content and parse JSON\n  const origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64').toString());\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n// No file returned / new workflow\n} else if (Object.keys($input.all()[0].json).includes(\"data\")) {\n  const origWorkflow = JSON.parse($input.all()[0].json.data);\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n\n} else {\n  // Order JSON object\n  const n8nWorkflow = $input.all()[1].json;\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n  \n  // Proper formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return items\nreturn $input.all();\n"},"id":"a160239c-8d59-4791-b18a-2a8778438ab9","name":"isDiffOrNew","type":"n8n-nodes-base.code","position":[640,820],"typeVersion":1},{"parameters":{"dataType":"string","value1":"={{$json.github_status}}","rules":{"rules":[{"value2":"same"},{"value2":"different","output":1},{"value2":"new","output":2}]}},"id":"6434d988-56f3-42c5-9726-5a8b0d793f27","name":"Check Status","type":"n8n-nodes-base.switch","position":[1040,820],"typeVersion":1},{"parameters":{},"id":"0fb435f7-2142-43dc-bcec-4e6204eb8214","name":"Same file - Do nothing","type":"n8n-nodes-base.noOp","position":[1260,660],"typeVersion":1},{"parameters":{},"id":"5628cdfe-f58f-4d7f-8657-e8730a305421","name":"File is different","type":"n8n-nodes-base.noOp","position":[1260,820],"typeVersion":1},{"parameters":{},"id":"e541bc13-b439-436f-97ca-ed7688d7bb54","name":"File is new","type":"n8n-nodes-base.noOp","position":[1260,1020],"typeVersion":1},{"parameters":{"resource":"file","owner":{"__rl":true,"mode":"","value":"={{ $('Config').first().item.repo_owner }}"},"repository":{"__rl":true,"mode":"","value":"={{ $('Config').first().item.repo_name }}"},"filePath":"={{ $('Config').first().item.repo_path }}{{ $json.subPath }}{{$('Execute Workflow Trigger').first().json.id}}.json","fileContent":"={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}","commitMessage":"={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"},"id":"3b62fe20-51af-4400-80d1-705d3565c47e","name":"Create new file","type":"n8n-nodes-base.github","position":[1480,1020],"typeVersion":1,"webhookId":"f626638f-36a2-40c0-bbb4-2c74cea6b3ee","credentials":{"githubApi":{"id":"KBH9KG8I0VZ6x3LD","name":"GitHub account"}}},{"parameters":{"resource":"file","operation":"edit","owner":{"__rl":true,"mode":"","value":"={{ $('Config').first().item.repo_owner }}"},"repository":{"__rl":true,"mode":"","value":"={{ $('Config').first().item.repo_name }}"},"filePath":"={{ $('Config').first().item.repo_path }}{{ $json.subPath }}{{$('Execute Workflow Trigger').first().json.id}}.json","fileContent":"={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}","commitMessage":"={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"},"id":"9396234f-6452-4778-b7c2-b5a6a4b84a45","name":"Edit existing file","type":"n8n-nodes-base.github","position":[1480,820],"typeVersion":1,"webhookId":"1c86dcbf-a0e1-41f2-8cc2-7addd23acab9","credentials":{"githubApi":{"id":"KBH9KG8I0VZ6x3LD","name":"GitHub account"}}},{"parameters":{"options":{}},"id":"a7f080e3-7781-48fd-b0c6-0d082b3a749e","name":"Loop Over Items","type":"n8n-nodes-base.splitInBatches","position":[1080,180],"typeVersion":3},{"parameters":{"rule":{"interval":[{"triggerAtHour":1,"triggerAtMinute":33}]}},"id":"b5a6609d-f4a8-40ec-b350-dffe6398adb4","name":"Schedule Trigger","type":"n8n-nodes-base.scheduleTrigger","position":[480,280],"typeVersion":1.2},{"parameters":{"assignments":{"assignments":[{"id":"dae43d3b-56e5-4098-b602-862ebf5cd073","name":"subPath","type":"string","value":"={{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[0] }}/{{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[1] }}/"}]},"includeOtherFields":true,"options":{}},"id":"ca2eb414-d801-4d62-b330-75e5d4c89f27","name":"Create sub path","type":"n8n-nodes-base.set","position":[840,820],"typeVersion":3.3},{"parameters":{"content":"## Backup to GitHub \nThis workflow will backup all instance workflows to GitHub every 24 hours.\n\nThe files are saved into folders using `YYYY/MM/` for the directory path and `ID.json` for the filename.\n\nThe Repo Owner, Repo Name and Main folder are set using the **Variables** feature but can be replaced with the `Config` node in the subworkflow. \n\nThe workflow runs calls itself to help reduce memory usage, Once the workflow has completed it will send an optional notification to Slack.\n\n### Time to Run\nTested with 1423 workflows on `1.44.1` it took under 30 minutes for the first run and under 12 minutes once the initial run is complete.","height":417,"width":385,"color":4},"id":"bc07e1f0-9560-4ad3-85d8-2e4c9231c8a6","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","position":[0,0],"typeVersion":1},{"parameters":{"content":"## Main workflow loop","height":416.1856906618075,"width":1272.6408145680155,"color":7},"id":"43ad96bd-a6d7-4cd7-9536-f10525de0677","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","position":[440,0],"typeVersion":1},{"parameters":{"select":"channel","channelId":{"__rl":true,"mode":"name","value":"#notifications"},"text":"=:information_source:  Starting Workflow Backup [{{ $execution.id }}]","otherOptions":{"includeLinkToWorkflow":false}},"id":"c12b368a-a5b5-4819-a6a3-5ce2b666bcc8","name":"Starting Message","type":"n8n-nodes-base.slack","position":[720,180],"webhookId":"c02eb407-5547-4aa0-9ebf-46dab67b63b6","typeVersion":2.2},{"parameters":{"workflowId":"={{ $workflow.id }}","mode":"each","options":{}},"id":"0750caf8-1427-43d1-84fe-cdfc57922d79","name":"Execute Workflow","type":"n8n-nodes-base.executeWorkflow","position":[1300,200],"typeVersion":1,"onError":"continueErrorOutput"},{"parameters":{"select":"channel","channelId":{"__rl":true,"mode":"name","value":"#notifications"},"text":"=✅ Backup has completed - {{ $('n8n').all().length }} workflows have been processed.","otherOptions":{}},"id":"7420fcb1-f700-4f59-9b7d-07494a6c6c8a","name":"Completed Notification","type":"n8n-nodes-base.slack","position":[1300,20],"webhookId":"a0c6e8c8-5d71-40fa-b02b-63a7ed5726c4","executeOnce":true,"typeVersion":2.2},{"parameters":{"select":"channel","channelId":{"__rl":true,"mode":"name","value":"#notifications"},"text":"=:x: Failed to backup {{ $('Loop Over Items').item.json.id }}","otherOptions":{"includeLinkToWorkflow":false}},"id":"e751e280-0ad1-41b4-8f98-d0fcc86a2171","name":"Failed Flows","type":"n8n-nodes-base.slack","position":[1500,220],"webhookId":"2a092edb-de12-490f-931b-34d70e7d7696","typeVersion":2.2},{"parameters":{"resource":"file","operation":"get","owner":{"__rl":true,"value":"= {{ $json.repo_owner }}","mode":""},"repository":{"__rl":true,"value":"={{ $json.repo_name }}","mode":""},"filePath":"={{ $('Config').first().item.repo_path }}{{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[0] }}/{{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[1] }}/{{$json.id}}.json","asBinaryProperty":false,"additionalParameters":{}},"id":"311afb8e-a141-4e88-8a04-0bc2e4ec83dc","name":"Get file data","type":"n8n-nodes-base.github","position":[240,560],"typeVersion":1,"alwaysOutputData":true,"webhookId":"40624b7c-7b65-4361-9f14-c6c9680b5b9f","credentials":{"githubApi":{"id":"KBH9KG8I0VZ6x3LD","name":"GitHub account"}},"continueOnFail":true},{"parameters":{"assignments":{"assignments":[{"id":"8f6d1741-772f-462a-811f-4c334185e4f0","name":"repo_owner","type":"string","value":"=nathankwok"},{"id":"8cac215c-4fd7-422f-9fd2-6b2d1e5e0383","name":"repo_name","type":"string","value":"=n8n-workflows"},{"id":"eee305e9-4164-462a-86bd-80f0d58a31ae","name":"repo_path","type":"string","value":"=nathankwok/n8n-workflows"}]},"includeOtherFields":true,"options":{}},"id":"c62976a2-8862-4f3c-9b2d-ce110fa386b0","name":"Config","type":"n8n-nodes-base.set","position":[240,840],"typeVersion":3.4}],"connections":{"n8n":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Config":{"main":[[{"node":"Get file data","type":"main","index":0},{"node":"Merge Items","type":"main","index":1}]]},"Get File":{"main":[[{"node":"Merge Items","type":"main","index":0}]]},"File is new":{"main":[[{"node":"Create new file","type":"main","index":0}]]},"Merge Items":{"main":[[{"node":"isDiffOrNew","type":"main","index":0}]]},"isDiffOrNew":{"main":[[{"node":"Create sub path","type":"main","index":0}]]},"Check Status":{"main":[[{"node":"Same file - Do nothing","type":"main","index":0}],[{"node":"File is different","type":"main","index":0}],[{"node":"File is new","type":"main","index":0}]]},"Failed Flows":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Get file data":{"main":[[{"node":"If file too large","type":"main","index":0}]]},"Create new file":{"main":[[{"node":"Return","type":"main","index":0}]]},"Create sub path":{"main":[[{"node":"Check Status","type":"main","index":0}]]},"Loop Over Items":{"main":[[{"node":"Completed Notification","type":"main","index":0}],[{"node":"Execute Workflow","type":"main","index":0}]]},"Execute Workflow":{"main":[[{"node":"Loop Over Items","type":"main","index":0}],[{"node":"Failed Flows","type":"main","index":0}]]},"Schedule Trigger":{"main":[[{"node":"Starting Message","type":"main","index":0}]]},"Starting Message":{"main":[[{"node":"n8n","type":"main","index":0}]]},"File is different":{"main":[[{"node":"Edit existing file","type":"main","index":0}]]},"If file too large":{"main":[[{"node":"Get File","type":"main","index":0}],[{"node":"Merge Items","type":"main","index":0}]]},"Edit existing file":{"main":[[{"node":"Return","type":"main","index":0}]]},"On clicking 'execute'":{"main":[[{"node":"Starting Message","type":"main","index":0}]]},"Same file - Do nothing":{"main":[[{"node":"Return","type":"main","index":0}]]},"Execute Workflow Trigger":{"main":[[{"node":"Config","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{},"versionId":"7fbe004c-80ee-49ca-a74b-f303e1ca02e3","triggerCount":0,"tags":[]}},{"json":{"createdAt":"2025-06-16T08:16:33.952Z","updatedAt":"2025-06-16T08:16:33.952Z","id":"57Doo7hYy74QIJGG","name":"My workflow 4","active":false,"isArchived":false,"nodes":[{"parameters":{"resource":"file","operation":"get","owner":"={{$node[\"Globals\"].json[\"repo\"][\"owner\"]}}","repository":"={{$node[\"Globals\"].json[\"repo\"][\"name\"]}}","filePath":"={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{$json[\"name\"]}}.json","asBinaryProperty":false,"additionalParameters":{}},"id":"4db84afd-98e2-4bc0-85e2-a1eaf49a3897","name":"GitHub","type":"n8n-nodes-base.github","position":[800,-200],"typeVersion":1,"alwaysOutputData":true,"webhookId":"e8d85f6b-55e5-41c7-8e41-876447e46fc2","continueOnFail":true},{"parameters":{"values":{"string":[{"name":"repo.owner","value":"shashikanth171"},{"name":"repo.name","value":"n8n-backup"},{"name":"repo.path","value":"workflows/"}]},"options":{}},"id":"9382e119-1e22-40d8-9a53-f14fb7cb8cb7","name":"Globals","type":"n8n-nodes-base.set","position":[100,-280],"typeVersion":1},{"parameters":{"filters":{},"requestOptions":{}},"id":"5e2b997d-cdce-44b1-85fa-60f205a888b5","name":"n8n","type":"n8n-nodes-base.n8n","position":[340,-280],"typeVersion":1},{"parameters":{"options":{}},"id":"f6eef8c1-ce35-4c0f-a48e-75338fc78317","name":"Loop Over Items","type":"n8n-nodes-base.splitInBatches","position":[560,-280],"executeOnce":false,"typeVersion":3},{"parameters":{"conditions":{"options":{"version":2,"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"16a9182d-059d-4774-ba95-654fb4293fdb","operator":{"type":"string","operation":"notExists","singleValue":true},"leftValue":"={{ $json.error }}","rightValue":""}]},"options":{}},"id":"de1b9fd9-c620-437c-a297-ca649ae8770e","name":"If","type":"n8n-nodes-base.if","position":[1000,-200],"typeVersion":2.2},{"parameters":{"conditions":{"options":{"version":2,"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"e0c66624-429a-4f1f-bf7b-1cc1b32bad7b","operator":{"type":"string","operation":"notEquals"},"leftValue":"={{ $json.content }}","rightValue":"={{ $('Loop Over Items').item.json.toJsonString() }}"}]},"options":{}},"id":"17847d82-603e-419a-a7cf-f59d651fec96","name":"If1","type":"n8n-nodes-base.if","position":[1880,100],"typeVersion":2.2},{"parameters":{"jsCode":"let items = $input.all()\n\nfor (item of items) {\n    item.json.content = Buffer.from(item.json.content, 'base64').toString('utf8')\n}\n\nreturn items;\n"},"id":"4895b3d4-cf30-46e3-9567-c66d8e87a070","name":"Code","type":"n8n-nodes-base.code","position":[1560,-220],"typeVersion":2},{"parameters":{"resource":"file","owner":"={{$node[\"Globals\"].json[\"repo\"][\"owner\"]}}","repository":"={{$node[\"Globals\"].json[\"repo\"][\"name\"]}}","filePath":"={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{ $('Loop Over Items').item.json.name }}.json","fileContent":"={{ $('Loop Over Items').item.json.toJsonString()  }}","commitMessage":"=[N8N Backup] {{ $('Loop Over Items').item.json.name }}.json"},"id":"e1e21c66-8201-4c9a-8dae-f6802df56f7a","name":"Create new file and commit","type":"n8n-nodes-base.github","position":[1180,-40],"typeVersion":1,"webhookId":"e017af62-aeb5-4b55-a3c6-3fcd2da1fc16"},{"parameters":{"resource":"file","operation":"edit","owner":"={{$node[\"Globals\"].json[\"repo\"][\"owner\"]}}","repository":"={{$node[\"Globals\"].json[\"repo\"][\"name\"]}}","filePath":"={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{ $('Loop Over Items').item.json.name }}.json","fileContent":"={{ $('Loop Over Items').item.json.toJsonString()  }}","commitMessage":"=[N8N Backup] {{ $('Loop Over Items').item.json.name }}.json"},"id":"56fba9ea-1333-418d-8578-fe3ff35c46be","name":"Update file content and commit","type":"n8n-nodes-base.github","position":[2240,300],"typeVersion":1,"webhookId":"ac013b6b-2298-4480-9e28-2aba2f002846"},{"parameters":{"rule":{"interval":[{"field":"minutes"}]}},"id":"f3b7d82e-ab11-4c75-a6ee-7fcad50d53e6","name":"Schedule Trigger","type":"n8n-nodes-base.scheduleTrigger","position":[-120,-280],"typeVersion":1.2},{"parameters":{"content":"Workflow changes committed to the repository","height":80},"id":"d5a78154-1b36-4e48-9c92-b8109475de45","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","position":[2400,320],"typeVersion":1},{"parameters":{"content":"Check if there are any changes in the workflow","height":80},"id":"1db37204-c229-44a8-8c82-bb0c350e2dc1","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","position":[2020,100],"typeVersion":1},{"parameters":{"content":"Create a new file for the workflow","height":80},"id":"d97588a9-8525-4920-a37a-8e716d485b58","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","position":[1300,-20],"typeVersion":1},{"parameters":{"content":"Check if file exists in the repository","height":80},"id":"76136374-d9cd-4d19-aa0c-372adc9191d6","name":"Sticky Note3","type":"n8n-nodes-base.stickyNote","position":[1000,-300],"typeVersion":1},{"parameters":{"content":"Convert the file contents to JSON string","height":80},"id":"efc1d6d1-64e8-4f15-a1b4-b0e023c415ac","name":"Sticky Note4","type":"n8n-nodes-base.stickyNote","position":[1500,-320],"typeVersion":1},{"parameters":{"content":"Get all workflows","height":80},"id":"0377bd83-6f19-4197-9abb-5d136d183672","name":"Sticky Note5","type":"n8n-nodes-base.stickyNote","position":[280,-380],"typeVersion":1},{"parameters":{"content":"Set variables","height":80},"id":"aae8c75a-8cc2-4e4d-869f-74417f5b6701","name":"Sticky Note6","type":"n8n-nodes-base.stickyNote","position":[20,-140],"typeVersion":1}],"connections":{"If":{"main":[[{"node":"Code","type":"main","index":0}],[{"node":"Create new file and commit","type":"main","index":0}]]},"If1":{"main":[[{"node":"Update file content and commit","type":"main","index":0}],[{"node":"Loop Over Items","type":"main","index":0}]]},"n8n":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Code":{"main":[[{"node":"If1","type":"main","index":0}]]},"GitHub":{"main":[[{"node":"If","type":"main","index":0}]]},"Globals":{"main":[[{"node":"n8n","type":"main","index":0}]]},"Loop Over Items":{"main":[[],[{"node":"GitHub","type":"main","index":0}]]},"Schedule Trigger":{"main":[[{"node":"Globals","type":"main","index":0}]]},"Create new file and commit":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Update file content and commit":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"61da7acc-7a43-48b5-a6b5-5880e115d3e7","triggerCount":0,"tags":[]}},{"json":{"createdAt":"2025-06-15T03:40:53.704Z","updatedAt":"2025-06-15T06:01:37.362Z","id":"WnWbiRX5ayJ8mAjP","name":"My workflow 3","active":false,"isArchived":false,"nodes":[{"parameters":{"httpMethod":"POST","path":"552bf657-141b-4beb-8ec4-63fdcfca5119","options":{"responseData":""}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[620,320],"id":"289c9578-aaa0-489e-a284-10b26cebab37","name":"Webhook","webhookId":"552bf657-141b-4beb-8ec4-63fdcfca5119"},{"parameters":{"sendTo":"webhook@mailrelayer.xyz","subject":"ffaas","emailType":"text","message":"hey","options":{"appendAttribution":false,"attachmentsUi":{"attachmentsBinary":[{}]}}},"type":"n8n-nodes-base.gmail","typeVersion":2.1,"position":[1060,320],"id":"90d5c7a7-4fd0-4c05-a1fa-dbdca3c1804a","name":"Gmail","webhookId":"7a550d9c-d502-49f7-a233-6b56be4fbd1d","alwaysOutputData":false,"credentials":{"gmailOAuth2":{"id":"6qrDcdevVT45ACgs","name":"Gmail account"}}},{"parameters":{"htmlInput":"={{ $json.body.choices[0].message.content_list[0].text }}"},"type":"@custom-js/n8n-nodes-pdf-toolkit.html2Pdf","typeVersion":1,"position":[840,320],"id":"66dacecd-824a-4095-9cad-d4bcc66c6266","name":"HTML to PDF","credentials":{"customJsApi":{"id":"1ZhUlSEl03z8HPgJ","name":"customjs_0"}}}],"connections":{"Webhook":{"main":[[{"node":"HTML to PDF","type":"main","index":0}]]},"HTML to PDF":{"main":[[{"node":"Gmail","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"c3e272b4-6cdd-49b8-abd5-e142c01a8141","triggerCount":0,"tags":[]}},{"json":{"createdAt":"2025-06-10T22:53:36.297Z","updatedAt":"2025-06-16T07:57:47.070Z","id":"wruIwybajv1jOFAD","name":"My workflow","active":false,"isArchived":false,"nodes":[{"parameters":{"rule":{"interval":[{},{}]}},"type":"n8n-nodes-base.scheduleTrigger","typeVersion":1.2,"position":[0,0],"id":"3559f73a-eeb4-42c4-a3b1-0b569e7f6c1a","name":"Schedule Trigger","disabled":true},{"parameters":{"language":"python","pythonCode":"import time\nimport base64\nimport json\nfrom cryptography.hazmat.primitives.serialization import load_pem_private_key\nfrom cryptography.hazmat.primitives.asymmetric import padding\nfrom cryptography.hazmat.primitives import hashes\n\n# Helper to base64-url encode (no padding)\ndef b64url(data):\n    return base64.urlsafe_b64encode(data).rstrip(b'=')\n\n# Inputs: adjust for n8n variables if needed\nusername = \"nkwok\"    # e.g., 'MYUSER'\naccount = \"qqa43113.us-west-2.privatelink\"      # e.g., 'myorg-myaccount'\nprivate_key_str = \"\"\"-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDP/mW46Z4Pw8/i\nkWWzlqdnzXnRtxJsa0Xt3fpM+votaRFOWZXMowYZfsT8GqD/zVqzoHr8Sig0lGAx\nxq+/ALCas1PDr68K3/rs7KCIcdeA3v9RW7+FRhqHpofQw+4UXnGqAq/4YhjshrZM\nGqnxt44Q4UF2HhNVFKIMx/CbowP2vq9mKyEQWfv48c4xEdQC2/07OkLjFtLjCQrX\n69RmX7lWPVM8IcFwVxFwvMybf2v3uYsqoWsn/S5Lazi+iY8wT1NA5vbwDIV7fN6c\nGKp5N90lAYCWwZ4ah1Fk/mdOoMjoLTeuK+S12Pj92E4cicbbXvL3s8qHBGW37+1S\nqnWwo51NAgMBAAECggEAFVJDSY2CkKQmhdfDdgGeFJPUMTgpRn2dVAZ6zPRiEVCh\ndQeARdN6YcJZ3WwPZVmUOttbGsyxSr6LuTPgZTM5Z1+1rlbZRJie8jWe4+MjpR12\n98ybbpqNSAA9ZkcHe1q5H8/vC7ERVAHKjd+ihy76pxFS8rxKMrZkQZd8uz+ekucG\nvgZuzfqEWS3zyxYf54qXnWUG3tVv/5PP0CHcnXhAsJQBvFEq2jgxcl4B2agEeqwr\nfNR10k7U9un7J6NsSTREN0TDlsrbuu057mCQhfyzw80VO2nCTG8AoIJyJ5Pb1d4n\nYxnM3fkriIGF9gDXEbKZ7QbJc0Z1YxZX4VEA1PxKgwKBgQD64+Fj2Wkf1gKfGMTF\nJsgMBksVs2eG4qTw6SKRDUUgGHtA2+427BHgHmf2qwzZcWXqd7vag3ts7vcFpGAy\nwaqrOHzuL4RomPDO/r76pwxCdGZ7bPZ/G19jL0kHtPF/fwS8N7HBdxllIoxetXIb\nfWr6DqMcP9QVNW3uU3BtXJ89IwKBgQDUOtvUdMFHZxZlTHiC8tIb2PRfyh16t+19\nLlb37+SXKiHvAFzuF0yULZLrqNojaGU2tt/ZiOmbsnKb+H+l1n3jDqHtiUFPy8FY\nLTFjNSdgrIV2vLxG9/FKg442sWrsFnnFW+XLLc15IatSOOjfd/qhNjbwkRq78mcO\nf/iUmG/6zwKBgQDPH0H7hIjc13jijzgi6plMFAX4rFtTZ9hzaoQ265WdoZhfOzG1\n9b3sIC4D3cKF4LAamS5kfxduHvmflsw0Gt4i7Ed2+5N8Jobm3DgeBbqBQkc4rgPx\ne0+MOoU375FPiDUIjZIZ/ZDhhVwM9A5301p1hY/yyl70A1/12LyADG8JsQKBgQCP\n+qJafx8EvuYNsRRs2ik6pTQcrDTVpWQjscVkjUYKW5YL27Yv/HSCbmynHbVnohJQ\nTT6OCPlbHHPuZmbK7joXST0Htj8t0HCJzpcb09q0FjaxOBePGfSDdb6MUk7Ufeb8\nwnyiG5+zFulwbZVmzbGlnu8kw3xcl3Xc+2p7/PKzNwKBgAXi7ChohuXfMSTgUZed\n8D7jAxCGojSs+GB/ZIpJRKwbdUrxWSIQVfNVbLf/m6sEyCKJHJygFuwBm0JCEEUL\ndlO4LY7UpfcgZ5WtCLBXrRyMe8jaFfMdyBmwBHGSe8bdKNWhBQdRAByiBw0lQPsK\n5E4WiWPucZN9WeoMiA1A9yFL\n-----END PRIVATE KEY-----\"\"\"  # PEM string\n\n# JWT header and payload\nheader = {\"alg\": \"RS256\", \"typ\": \"JWT\"}\nnow = int(time.time())\npayload = {\n    \"iss\": f\"{account.upper()}.{username.upper()}.SHA256\",\n    \"sub\": f\"{account.upper()}.{username.upper()}\",\n    \"iat\": now,\n    \"exp\": now + 60\n}\n\n# Encode header & payload\nheader_b64 = b64url(json.dumps(header, separators=(',', ':')).encode())\npayload_b64 = b64url(json.dumps(payload, separators=(',', ':')).encode())\nmessage = header_b64 + b'.' + payload_b64\n\n# Load private key\nprivate_key = load_pem_private_key(\n    private_key_str.encode(),\n    password=None,\n)\n\n# Sign with RS256\nsignature = private_key.sign(\n    message,\n    padding.PKCS1v15(),\n    hashes.SHA256()\n)\nsignature_b64 = b64url(signature)\n\n# Assemble JWT\njwt_token = message + b'.' + signature_b64\n\n# Output as string\nreturn {\n    \"jwt_token\": jwt_token.decode()\n}"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[240,-220],"id":"8d489e44-458e-4e80-9cd0-e2bcea55f9b9","name":"Code","disabled":true},{"parameters":{"language":"python","pythonCode":"import requests\nimport json\n\nprint(requests)\ntoken = _input.first().json.snowflake_token\nbase_snowflake_url = \"https://qqa43113.snowflakecomputing.com\"\n\n\"\"\"Sends a prompt and chat history to the REST API.\"\"\"\nprompt = \"hello\"\n\nthis_message = [{\"role\": \"user\", \"content\": [{\"type\": \"text\", \"text\": prompt}]}]\n\nrequest_body = {\n  \"messages\": this_message,\n  \"model\": \"llama3.2-1b\",\n  \"temperature\": 0.4,\n  \"top_p\": 0.6,\n}\nprint(request_body)\n\nheaders={\n  # might need to change: https://docs.snowflake.com/en/user-guide/snowflake-cortex/cortex-rest-api#post-api-v2-cortex-inference-complete\n  # \"Authorization\": f'Snowflake Token=\"{session.connection._rest.token}\"',\n  \"Authorization\": f'Bearer {token}',\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json, text/event-stream\",\n}\nprint(headers)\n\nurl=f\"{base_snowflake_url}/api/v2/cortex/analyst/message\"\nurl=f\"{base_snowflake_url}/api/v2/cortex/inference:complete\"\nprint(url)\n\n# response = requests.post(\n#   url,\n#   json=request_body,\n#   headers=headers\n# )\n\n# # print(response.json())\n\n# request_id = response.headers.get(\"X-Snowflake-Request-Id\")\n# if response.status_code < 400:\n#   return {**response.json(), \"request_id\": request_id}\n# else:\n#   raise Exception(\n#       f\"Request failed (id: {request_id}) with status {response.status_code}: {response.text}\"\n#     )\n\n\n\nreturn {\n    \"response\": \"response\"\n}\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[520,-220],"id":"7e5ca177-2470-443f-95b2-15e36e6391e8","name":"Code2"},{"parameters":{"jsCode":"// import crypto from 'crypto';\nconst crypto = require('crypto');\n\n\nconst privateKeyString = `-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDP/mW46Z4Pw8/i\nkWWzlqdnzXnRtxJsa0Xt3fpM+votaRFOWZXMowYZfsT8GqD/zVqzoHr8Sig0lGAx\nxq+/ALCas1PDr68K3/rs7KCIcdeA3v9RW7+FRhqHpofQw+4UXnGqAq/4YhjshrZM\nGqnxt44Q4UF2HhNVFKIMx/CbowP2vq9mKyEQWfv48c4xEdQC2/07OkLjFtLjCQrX\n69RmX7lWPVM8IcFwVxFwvMybf2v3uYsqoWsn/S5Lazi+iY8wT1NA5vbwDIV7fN6c\nGKp5N90lAYCWwZ4ah1Fk/mdOoMjoLTeuK+S12Pj92E4cicbbXvL3s8qHBGW37+1S\nqnWwo51NAgMBAAECggEAFVJDSY2CkKQmhdfDdgGeFJPUMTgpRn2dVAZ6zPRiEVCh\ndQeARdN6YcJZ3WwPZVmUOttbGsyxSr6LuTPgZTM5Z1+1rlbZRJie8jWe4+MjpR12\n98ybbpqNSAA9ZkcHe1q5H8/vC7ERVAHKjd+ihy76pxFS8rxKMrZkQZd8uz+ekucG\nvgZuzfqEWS3zyxYf54qXnWUG3tVv/5PP0CHcnXhAsJQBvFEq2jgxcl4B2agEeqwr\nfNR10k7U9un7J6NsSTREN0TDlsrbuu057mCQhfyzw80VO2nCTG8AoIJyJ5Pb1d4n\nYxnM3fkriIGF9gDXEbKZ7QbJc0Z1YxZX4VEA1PxKgwKBgQD64+Fj2Wkf1gKfGMTF\nJsgMBksVs2eG4qTw6SKRDUUgGHtA2+427BHgHmf2qwzZcWXqd7vag3ts7vcFpGAy\nwaqrOHzuL4RomPDO/r76pwxCdGZ7bPZ/G19jL0kHtPF/fwS8N7HBdxllIoxetXIb\nfWr6DqMcP9QVNW3uU3BtXJ89IwKBgQDUOtvUdMFHZxZlTHiC8tIb2PRfyh16t+19\nLlb37+SXKiHvAFzuF0yULZLrqNojaGU2tt/ZiOmbsnKb+H+l1n3jDqHtiUFPy8FY\nLTFjNSdgrIV2vLxG9/FKg442sWrsFnnFW+XLLc15IatSOOjfd/qhNjbwkRq78mcO\nf/iUmG/6zwKBgQDPH0H7hIjc13jijzgi6plMFAX4rFtTZ9hzaoQ265WdoZhfOzG1\n9b3sIC4D3cKF4LAamS5kfxduHvmflsw0Gt4i7Ed2+5N8Jobm3DgeBbqBQkc4rgPx\ne0+MOoU375FPiDUIjZIZ/ZDhhVwM9A5301p1hY/yyl70A1/12LyADG8JsQKBgQCP\n+qJafx8EvuYNsRRs2ik6pTQcrDTVpWQjscVkjUYKW5YL27Yv/HSCbmynHbVnohJQ\nTT6OCPlbHHPuZmbK7joXST0Htj8t0HCJzpcb09q0FjaxOBePGfSDdb6MUk7Ufeb8\nwnyiG5+zFulwbZVmzbGlnu8kw3xcl3Xc+2p7/PKzNwKBgAXi7ChohuXfMSTgUZed\n8D7jAxCGojSs+GB/ZIpJRKwbdUrxWSIQVfNVbLf/m6sEyCKJHJygFuwBm0JCEEUL\ndlO4LY7UpfcgZ5WtCLBXrRyMe8jaFfMdyBmwBHGSe8bdKNWhBQdRAByiBw0lQPsK\n5E4WiWPucZN9WeoMiA1A9yFL\n-----END PRIVATE KEY-----`;\n\nconst account = 'qqa43113.us-west-2.privatelink'; // e.g., xy12345.us-east-1\nconst username = 'nkwok';\nconst publicKeyFingerprint = 'SHA256:your_public_key_fingerprint==';\nconst tokenLifetimeSeconds = 3600; // 1 hour\n\n// CONFIG\nconst EXPIRATION_SECS = 60 * 5; // 5 min\n\n// Helper: base64url encode\nfunction base64url(input) {\n  return Buffer.from(input)\n    .toString('base64')\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_')\n    .replace(/=+$/, '');\n}\n\n// Header + payload\nconst header = {\n  alg: \"RS256\",\n  typ: \"JWT\"\n};\n\nconst issuedAt = Math.floor(Date.now() / 1000);\nconst payload = {\n  iss: `${account.toUpperCase()}.${username.toUpperCase()}`, // e.g. XY12345.USERNAME\n  sub: `${account.toUpperCase()}.${username.toUpperCase()}`,\n  iat: issuedAt,\n  exp: issuedAt + EXPIRATION_SECS\n};\n\n// Create message\nconst headerB64 = base64url(JSON.stringify(header));\nconst payloadB64 = base64url(JSON.stringify(payload));\nconst msg = `${headerB64}.${payloadB64}`;\n\n// private key for signing\n\nconst sign = crypto.createSign('RSA-SHA256');\nsign.update(msg);\nsign.end();\n\nconst signatureB64 = base64url(sign.sign(privateKeyString));\n\n// Final JWT\nconst jwt = `${msg}.${signatureB64}`;\n\n// Output\nreturn [{ json: { snowflake_token: jwt } }];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[240,0],"id":"5e0f59c9-423a-4d0b-82c5-358d4c44ac37","name":"Get Snowflake Token"},{"parameters":{"jsCode":"const token = $input.first().json.snowflake_token;\nconst base_snowflake_url = \"https://qqa43113.snowflakecomputing.com\";\n\nconst prompt = \"hello\";\nconst this_message = [{\n  role: \"user\",\n  content: [\n    { type: \"text\", text: prompt }\n  ]\n}];\n\nconst request_body = {\n  messages: this_message,\n  model: \"llama3.2-1b\",\n  temperature: 0.4,\n  top_p: 0.6,\n};\n\nconst headers = {\n  \"Authorization\": `Bearer ${token}`,\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json, text/event-stream\",\n};\n\nconst url = `${base_snowflake_url}/api/v2/cortex/inference:complete`;\n\nlet response, responseBody, requestId;\n\ntry {\n  response = await $http.post(url, {\n    body: request_body,\n    headers,\n    responseType: 'json',\n    resolveWithFullResponse: true,\n  });\n  responseBody = response.data;\n  requestId = response.headers[\"x-snowflake-request-id\"];\n\n  return [{ ...responseBody, request_id: requestId }];\n\n} catch (error) {\n  requestId = error.response?.headers?.[\"x-snowflake-request-id\"];\n  throw new Error(`Request failed (id: ${requestId}) with status ${error.response?.status}: ${error.response?.data || error.message}`);\n}"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[520,0],"id":"49179d3c-8698-4c2a-833a-d0bc16ef310a","name":"Code1"},{"parameters":{"method":"POST","url":"https://qqa43113.snowflakecomputing.com/api/v2/cortex/inference:complete","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Authorization","value":"=Bearer {{ $('Get Snowflake Token').item.json.snowflake_token }}"},{"name":"Content-Type","value":"application/json"},{"name":"Accept","value":"application/json, text/event-stream"}]},"sendBody":true,"specifyBody":"json","jsonBody":"{\"messages\": [{\"role\": \"user\", \"content\": [{\"type\": \"text\", \"text\": \"hello\"}]}], \"model\": \"llama3.2-1b\", \"temperature\": 0.4, \"top_p\": 0.6}","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[520,220],"id":"0f2d0555-6525-4743-b4fd-708ca684207f","name":"HTTP Request"},{"parameters":{"httpMethod":"POST","path":"552bf657-141b-4beb-8ec4-63fdcfca5119","options":{"responseData":""}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[0,800],"id":"9ca235cd-a921-4646-b701-608aa8b961b9","name":"Webhook","webhookId":"552bf657-141b-4beb-8ec4-63fdcfca5119"},{"parameters":{"rule":{"interval":[{}]}},"type":"n8n-nodes-base.scheduleTrigger","typeVersion":1.2,"position":[0,520],"id":"7c38f20d-9900-4260-9dd8-81e8d7819fce","name":"Schedule Trigger1"},{"parameters":{"sendTo":"webhook@mailrelayer.xyz","subject":"Test","message":"I've customized your resume to the following job description","options":{"appendAttribution":false,"attachmentsUi":{"attachmentsBinary":[{}]}}},"type":"n8n-nodes-base.gmail","typeVersion":2.1,"position":[440,800],"id":"80ace482-bfaa-4f32-bba3-0fb91488b056","name":"Gmail","webhookId":"7a550d9c-d502-49f7-a233-6b56be4fbd1d","credentials":{"gmailOAuth2":{"id":"6qrDcdevVT45ACgs","name":"Gmail account"}}},{"parameters":{"htmlInput":"={{ $json.body.choices[0].message.content_list[0].text }}"},"type":"@custom-js/n8n-nodes-pdf-toolkit.html2Pdf","typeVersion":1,"position":[220,800],"id":"b8006afe-f627-49ba-8bc1-ff170ffde6a9","name":"HTML to PDF","credentials":{"customJsApi":{"id":"1ZhUlSEl03z8HPgJ","name":"customjs_0"}}},{"parameters":{"method":"POST","url":"https://app.hex.tech/api/v1/projects/01977137-3f12-700d-9e0e-b3d6043b711a/runs","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Authorization","value":"Bearer 8dcc029cc6e39dd312752dcf5e543b5c01386c3045bbf86f2cc1aa25a957e71152fc6bbc77356b58af670ff6622687bc"}]},"sendBody":true,"specifyBody":"json","jsonBody":"{\n  \"inputParams\": {\n    \"system_prompt\": \"<role>You are an expert recruiter and hiring manager.</role>\\n<task>Read and analyze the following job description, in HTML format, and the following resume, in HTML format. Then answer the following query.</task>\",\n    \"user_prompt\": \"<query>Does the candidate fit this job description? If not, why do they not fit?</query>\\n<job_description>\"\n  }\n\n}","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[220,520],"id":"927334df-e163-4506-88a7-f00c8e9b229b","name":"HTTP Request1","disabled":true},{"parameters":{"method":"POST","url":"https://app.hex.tech/api/v1/projects/01977137-3f12-700d-9e0e-b3d6043b711a/runs","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Authorization","value":"Bearer 8dcc029cc6e39dd312752dcf5e543b5c01386c3045bbf86f2cc1aa25a957e71152fc6bbc77356b58af670ff6622687bc"}]},"sendBody":true,"specifyBody":"json","jsonBody":"{\n  \"inputParams\": {\n    \"system_prompt\": \"<role>You are a helpful assistant.</role>\\n<task>Answer the following query from the user.</task>\",\n    \"user_prompt\": \"<query>hello</query>\"\n  }\n\n}","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[460,520],"id":"9f59b325-46b1-420c-9737-410b8e7fdc91","name":"HTTP Request2"}],"connections":{"Schedule Trigger":{"main":[[{"node":"Get Snowflake Token","type":"main","index":0},{"node":"Code","type":"main","index":0}]]},"Code":{"main":[[]]},"Get Snowflake Token":{"main":[[{"node":"Code2","type":"main","index":0},{"node":"Code1","type":"main","index":0},{"node":"HTTP Request","type":"main","index":0}]]},"Code1":{"main":[[]]},"Webhook":{"main":[[{"node":"HTML to PDF","type":"main","index":0}]]},"HTML to PDF":{"main":[[{"node":"Gmail","type":"main","index":0}]]},"Schedule Trigger1":{"main":[[{"node":"HTTP Request1","type":"main","index":0}]]},"HTTP Request1":{"main":[[{"node":"HTTP Request2","type":"main","index":0}]]}},"settings":{"executionOrder":"v1","callerPolicy":"workflowsFromSameOwner"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{"Webhook":[{"json":{"headers":{"host":"capable-glowworm-adjusted.ngrok-free.app","user-agent":"python-requests/2.32.3","content-length":"290","accept":"*/*","accept-encoding":"gzip, deflate","content-type":"application/json","x-forwarded-for":"3.129.36.245","x-forwarded-host":"capable-glowworm-adjusted.ngrok-free.app","x-forwarded-proto":"https"},"params":{},"query":{},"body":{"choices":[{"message":{"content":"Hello! How can I assist you today?","content_list":[{"type":"text","text":"Hello! How can I assist you today?"}]}}],"usage":{"prompt_tokens":21,"completion_tokens":10,"total_tokens":31},"request_id":"b698a346-e53d-4c1f-bfe0-94e280a8d2f1"},"webhookUrl":"http://localhost:5678/webhook-test/552bf657-141b-4beb-8ec4-63fdcfca5119","executionMode":"test"}}],"Gmail":[{"json":{"id":"197722bb769fe6e7","threadId":"197722bb769fe6e7","labelIds":["SENT","INBOX"]}}]},"versionId":"9c7eb033-f869-4ad2-bc4c-208d30e2e7c8","triggerCount":0,"tags":[]}}]},"versionId":"81805a54-5200-47a0-bd6a-b6f8ccd3f4a9","triggerCount":0,"tags":[]}