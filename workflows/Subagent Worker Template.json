{
  "createdAt": "2025-07-19T10:44:49.202Z",
  "updatedAt": "2025-07-19T18:37:36.268Z",
  "id": "hCl6Jfq9jCR92FwZ",
  "name": "Subagent Worker Template",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {},
      "id": "execute_workflow_trigger",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        240,
        300
      ]
    },
    {
      "parameters": {
        "jsCode": "// Subagent initialization\nconst input = $input.first().json;\nconst batchId = input.batchId;\nconst tasks = input.tasks || [];\nconst workerPoolSize = input.workerPoolSize;\nconst totalBatches = input.totalBatches;\n\nconsole.log(`Subagent Worker ${batchId}/${totalBatches} starting with ${tasks.length} tasks`);\n\n// Prepare tasks for individual processing\nconst processedTasks = tasks.map((task, index) => ({\n  taskId: `${batchId}-${index + 1}`,\n  taskData: task,\n  batchId: batchId,\n  workerInfo: {\n    workerId: batchId,\n    totalWorkers: totalBatches,\n    poolSize: workerPoolSize\n  }\n}));\n\nreturn processedTasks;"
      },
      "id": "process_batch_info",
      "name": "Process Batch Info",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        460,
        300
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "split_tasks",
      "name": "Split Individual Tasks",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        680,
        300
      ]
    },
    {
      "parameters": {
        "jsCode": "// Format subagent results for orchestrator\nconst results = $input.all().map(item => item.json);\nconst firstResult = results[0];\n\nconst workerOutput = {\n  workerId: firstResult.workerInfo?.workerId || 'unknown',\n  batchId: firstResult.batchId,\n  totalTasks: results.length,\n  processedAt: new Date().toISOString(),\n  results: results.map(result => ({\n    taskId: result.taskId,\n    aiResponse: result.output || result.response || 'No response',\n    status: 'completed'\n  })),\n  summary: {\n    tasksProcessed: results.length,\n    processingTime: Date.now(),\n    workerStatus: 'success'\n  }\n};\n\nconsole.log(`Worker ${workerOutput.workerId} completed ${workerOutput.totalTasks} tasks`);\nreturn [workerOutput];"
      },
      "id": "format_worker_output",
      "name": "Format Worker Output",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1300,
        320
      ]
    }
  ],
  "connections": {
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "Process Batch Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Batch Info": {
      "main": [
        [
          {
            "node": "Split Individual Tasks",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Individual Tasks": {
      "main": [
        []
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveManualExecutions": true,
    "saveExecutionProgress": true
  },
  "staticData": null,
  "meta": null,
  "pinData": {},
  "versionId": "7075aff4-fc7d-4e25-8556-426eff45dc39",
  "triggerCount": 0,
  "tags": []
}

