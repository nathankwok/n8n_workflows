{
  "createdAt": "2025-09-03T08:29:23.372Z",
  "updatedAt": "2025-09-23T22:34:10.481Z",
  "id": "onEJNvmxhmWCE8mY",
  "name": "ask-data Omni Dashboard Search",
  "active": true,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "authentication": "bearerAuth",
        "path": "97808398-be62-4e69-8cf7-0916688859d8"
      },
      "type": "@n8n/n8n-nodes-langchain.mcpTrigger",
      "typeVersion": 2,
      "position": [
        0,
        0
      ],
      "id": "d6119acc-bdaa-48ea-a63c-44fa9bc8120e",
      "name": "MCP Server Trigger",
      "webhookId": "97808398-be62-4e69-8cf7-0916688859d8",
      "alwaysOutputData": true,
      "credentials": {
        "httpBearerAuth": {
          "id": "wzBcRrX0vk64pMBK",
          "name": "Zapier Inbound MCP Server"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "model": "gpt-4",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatAzureOpenAi",
      "typeVersion": 1,
      "position": [
        -48,
        464
      ],
      "id": "80dc83f2-bc74-4374-8bbb-90945747be0f",
      "name": "Azure OpenAI Chat Model",
      "credentials": {
        "azureOpenAiApi": {
          "id": "amfaI9YXiWesQ4eT",
          "name": "Azure Open AI gpt-4"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "toolDescription": "omni_dashboard_discovery",
        "text": "you are a helpful assistant",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        64,
        240
      ],
      "id": "185f8237-2808-43d3-b2ac-e47160384138",
      "name": "Omni Dashboard Discovery",
      "disabled": true
    },
    {
      "parameters": {
        "toolDescription": "Semantic search for documents (dashboards) using the name",
        "method": "POST",
        "url": "https://ml16699-hya89079.snowflakecomputing.com/api/v2/databases/analytics_dev/schemas/dev_omni/cortex-search-services/omni_documents_search_service_dev:query",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendHeaders": true,
        "specifyHeaders": "json",
        "jsonHeaders": "{\n  \"Content-Type\": \"application/json\"\n}",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"query\": \"customer breakdown\",\n    \"columns\": [\n        \"name\",\n        \"identifier\",\n        \"scope\",\n        \"owner_name\",\n        \"folder_name\"\n    ],\n    \"filter\": {\n        \"@not\": {\n            \"@eq\": {\n                \"scope\": \"restricted\"\n            }\n        }\n    },\n    \"limit\": 3\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        320,
        464
      ],
      "id": "ca85f5ca-3561-4c18-96bd-cd39b57c7a87",
      "name": "HTTP Request",
      "credentials": {
        "httpBearerAuth": {
          "id": "PnKZCKVe26AxmdDj",
          "name": "Snowflake API"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "8394a134-6af3-4ec0-b605-3270129037cc",
        "authentication": "basicAuth",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        704,
        0
      ],
      "id": "af795adf-5242-4155-ba03-29e0ebe3feb9",
      "name": "Webhook",
      "webhookId": "8394a134-6af3-4ec0-b605-3270129037cc",
      "alwaysOutputData": true,
      "credentials": {
        "httpBasicAuth": {
          "id": "qYqaYFYnJhcQuBMI",
          "name": "Zapier Inbound Basic Auth Webhook"
        }
      }
    },
    {
      "parameters": {
        "model": "o4-mini",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatAzureOpenAi",
      "typeVersion": 1,
      "position": [
        1024,
        288
      ],
      "id": "7fa88629-f385-402a-9be3-82355d5a49f9",
      "name": "Azure o4-mini",
      "credentials": {
        "azureOpenAiApi": {
          "id": "owGiNLHIZQGtrPG1",
          "name": "Azure Open AI o4-mini"
        }
      }
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-pro",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        1184,
        368
      ],
      "id": "cee0c3b5-f657-4ff5-bd0a-40c1e91fff2b",
      "name": "Gemini 2.5 Pro",
      "credentials": {
        "googlePalmApi": {
          "id": "yw1nLb6Dxz18ENh2",
          "name": "Gemini - Cribl"
        }
      }
    },
    {
      "parameters": {
        "description": "Snowflake Cortex Analyst tool to find relevant documents, document queries, and document query filters using SQL",
        "workflowId": {
          "__rl": true,
          "value": "d0l6ZepnDYgKyq5P",
          "mode": "list",
          "cachedResultName": "Snowflake Cortex Analyst Subworkflow"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "message": "={{ $('Global Vars').item.json.message }}",
            "snowflake_base_url": "={{ $('Global Vars').item.json.snowflake_base_url }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "message",
              "displayName": "message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "snowflake_base_url",
              "displayName": "snowflake_base_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1392,
        400
      ],
      "id": "b4a77a1c-2d31-4929-bc49-8f86d3ad408f",
      "name": "Snowflake Cortex Analyst",
      "disabled": true
    },
    {
      "parameters": {
        "toolDescription": "Semantic search for documents (dashboards) using the name",
        "method": "POST",
        "url": "={{ $('Global Vars').item.json.snowflake_base_url }}/api/v2/databases/{{ $('Global Vars').item.json.omni_documents_search_service.snowflake_database }}/schemas/{{ $('Global Vars').item.json.omni_documents_search_service.snowflake_schema }}/cortex-search-services/{{ $('Global Vars').item.json.omni_documents_search_service.service_name }}:query",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendHeaders": true,
        "specifyHeaders": "json",
        "jsonHeaders": "{\n  \"Content-Type\": \"application/json\"\n}",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"query\": \"{{ $('Webhook').item.json.body.message }}\",\n    \"columns\": [\n        \"name\",\n        \"identifier\",\n        \"scope\",\n        \"has_dashboard\",\n        \"owner_name\",\n        \"folder_name\",\n        \"folder_id\",\n        \"folder_path\"\n    ],\n    \"filter\": {\n        \"@not\": {\n            \"@eq\": {\n                \"scope\": \"restricted\"\n            }\n        }\n    },\n    \"limit\": 3\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        1584,
        352
      ],
      "id": "d7066b20-a3bd-488a-a693-2fa3b4955056",
      "name": "Snowflake Cortex Search Service",
      "credentials": {
        "httpBearerAuth": {
          "id": "PnKZCKVe26AxmdDj",
          "name": "Snowflake API"
        }
      }
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "{\n  \"snowflake_base_url\": \"https://ml16699-hya89079.snowflakecomputing.com\",\n  \"omni_documents_search_service\": {\n    \"snowflake_database\": \"ANALYTICS_DEV\",\n    \"snowflake_schema\": \"DEV_OMNI\",\n    \"service_name\": \"omni_documents_search_service_dev\"\n  },\n  \"omni_documents_analyst_agent\": {\n    \"snowflake_database\": \"SNOWFLAKE_INTELLIGENCE\",\n    \"snowflake_schema\": \"AGENTS\",\n    \"agent_name\": \"OMNI_DOCUMENTS_ANALYST_AGENT\"\n  }\n}",
        "includeOtherFields": true,
        "include": "selected",
        "includeFields": "message, body.message",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1024,
        0
      ],
      "id": "bf957f8a-c5a3-47cc-83d5-6cec5c9049c2",
      "name": "Global Vars"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are given several documents (outputs) in a JSON here:\n```json\n {{ $json.output.toJsonString() }}\n```\nGo through each one of the documents to filter out ones that have has_dashboard=false . \n\nThen extract out the fields from each output.\n- Use the document_id to craft a dashboard_url https://cribl.omniapp.co/dashboards/{document_id} \n- Use the folder_path to craft a folder_url like https://cribl.omniapp.co/f/{folder_path}\n\nThen craft a well formatted slack_message in the tone of a helpful data analyst, using each output document. \n- The message should address the user `{{ $('Webhook').item.json.body.user_first_name }} {{ $('Webhook').item.json.body.user_last_name }}`. \n- The message should list out documents after addressing them\n- Each document in the slack message should include the {document_name} that is linked to the respective {dashboard_url} and that the document exists in the {folder_name}, which is also linked to the respective {folder_url}. \n\nFInally, output in a structured JSON output format with the following keys:\n- message\n- dashboard_urls\n- folder_urls\n\nThe resulting output JSON should be something like this:\n```json\n{\n  \"message\": \"formatted slack message\",\n  \"dashboard_url\": [\n    \"dashboard_url_1\",\n    \"dashboard_url_2\"\n  ],\n  \"folder_urls\": [\n    \"folder_url_1\",\n    \"folder_url_2\"\n  ]\n}",
        "hasOutputParser": true,
        "needsFallback": true,
        "options": {
          "systemMessage": "You are an expert data analyst who is well versed with the dashboards you have built in Omni Analytics Business Intelligence tool. You triage requests from company stakeholders who want to find relevant dashboards in the Omni BI tool."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        2192,
        0
      ],
      "id": "af278ce5-7e17-4448-9ae4-c769f33828f2",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"array\",\n  \"items\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"document_id\": {\n          \"type\": \"string\"\n      },\n      \"document_name\": {\n          \"type\": \"string\"\n      },\n      \"scope\": {\n          \"type\": \"string\"\n      },\n      \"has_dashboard\": {\n          \"type\": \"boolean\"\n      },\n      \"folder_id\": {\n          \"type\": \"string\"\n      },\n      \"folder_name\": {\n          \"type\": \"string\"\n      },\n      \"folder_path\": {\n          \"type\": \"string\"\n      }\n    }\n  }\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        1744,
        288
      ],
      "id": "2d22b38a-3f89-47bf-b7b5-155dccfcaf42",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n\t\"type\": \"object\",\n\t\"properties\": {\n      \"message\": {\n        \"type\": \"string\"\n      },\n      \"dashboard_urls\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"string\"\n        }\n      },\n      \"folder_urls\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"string\"\n        }\n      }\n\t}\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        2480,
        224
      ],
      "id": "3d2c3dd2-8853-4d2a-af31-395b981b2cfa",
      "name": "Structured Output Parser1"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-pro",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        2208,
        336
      ],
      "id": "a0ef0bdb-c292-4cdf-a29d-4dfedcc63681",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "yw1nLb6Dxz18ENh2",
          "name": "Gemini - Cribl"
        }
      }
    },
    {
      "parameters": {
        "model": "o4-mini",
        "options": {
          "responseFormat": "json_object"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatAzureOpenAi",
      "typeVersion": 1,
      "position": [
        2064,
        272
      ],
      "id": "735fdd14-681d-4841-897d-58b1c7cb9730",
      "name": "Azure o4-mini1",
      "credentials": {
        "azureOpenAiApi": {
          "id": "owGiNLHIZQGtrPG1",
          "name": "Azure Open AI o4-mini"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        2960,
        0
      ],
      "id": "cb88c27f-6e98-4eca-9852-63fe5ef1ba96",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You must use both the Snowflake Cortex Search Service and the Snowflake Cortex Analyst tools to find the best document that would answer this request:\n{{ $json.message }}\n\nThe Snowflake Cortex Search Service will return a list of results, which represents several documents.\nReturn the output as a structured JSON output of the list of documents, with each document object that minimally contains the following fields:\n- document_id\n- document_name\n- scope\n- has_dashboard\n- folder_name\n- folder_id\n- folder_path",
        "hasOutputParser": true,
        "needsFallback": true,
        "options": {
          "systemMessage": "You are an expert data analyst who has built many dashboards in the Omni Analytics tool, which is a business intelligence tool, that sits on top of Snowflake data through dbt. You triage natural language queries from Stakeholders within the company in order to find the best dashboard (otherwise known as document) to answer the question. Documents, also known as dashboards, are parents of document queries, which are individual queries that run against the data within the parent document. Metadata on the documents and document queries and document query filters are stored in Snowflake and can be accessed through the Cortex Search Service and the Cortex Analyst tools."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        1248,
        0
      ],
      "id": "e1bb31d5-9392-42ca-8f5a-2ab313d56474",
      "name": "Cortex Search"
    }
  ],
  "connections": {
    "Azure OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Omni Dashboard Discovery",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Omni Dashboard Discovery": {
      "ai_tool": [
        [
          {
            "node": "MCP Server Trigger",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "ai_tool": [
        [
          {
            "node": "Omni Dashboard Discovery",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Global Vars",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Azure o4-mini": {
      "ai_languageModel": [
        [
          {
            "node": "Cortex Search",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Gemini 2.5 Pro": {
      "ai_languageModel": [
        [
          {
            "node": "Cortex Search",
            "type": "ai_languageModel",
            "index": 1
          }
        ]
      ]
    },
    "Snowflake Cortex Analyst": {
      "ai_tool": [
        [
          {
            "node": "Cortex Search",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Snowflake Cortex Search Service": {
      "ai_tool": [
        [
          {
            "node": "Cortex Search",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Global Vars": {
      "main": [
        [
          {
            "node": "Cortex Search",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Cortex Search",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser1": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 1
          }
        ]
      ]
    },
    "Azure o4-mini1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cortex Search": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {
    "Webhook": [
      {
        "json": {
          "headers": {
            "connection": "upgrade",
            "host": "agenticflows.xyz",
            "x-real-ip": "18.232.51.165",
            "x-forwarded-for": "18.232.51.165",
            "x-forwarded-proto": "https",
            "x-forwarded-host": "agenticflows.xyz",
            "x-forwarded-port": "443",
            "content-length": "247",
            "authorization": "Basic emFwaWVyOldNRXY4NDlmcGZGVlpYNkdoQjM2MGFmT3JmMWtfRFF2TlhfOFRSSjEzS1U=",
            "content-type": "application/json; charset=utf-8",
            "user-agent": "Zapier",
            "accept": "*/*",
            "accept-encoding": "gzip,deflate"
          },
          "params": {},
          "query": {},
          "body": {
            "channel_id": "C0912AANW1L",
            "channel_name": "data-eng-test-ai-channel",
            "conversation_id": "C0912AANW1L",
            "message": "customer breakdown",
            "message_ts": "1758612094.293819",
            "user_email": "nkwok@cribl.io",
            "user_first_name": "Nathan",
            "user_last_name": "Kwok"
          },
          "webhookUrl": "https://agenticflows.xyz/webhook-test/8394a134-6af3-4ec0-b605-3270129037cc",
          "executionMode": "test"
        }
      }
    ],
    "Global Vars": [
      {
        "json": {
          "message": "customer breakdown",
          "snowflake_base_url": "https://ml16699-hya89079.snowflakecomputing.com",
          "omni_documents_search_service": {
            "snowflake_database": "ANALYTICS_DEV",
            "snowflake_schema": "DEV_OMNI",
            "service_name": "omni_documents_search_service_dev"
          },
          "omni_documents_analyst_agent": {
            "snowflake_database": "SNOWFLAKE_INTELLIGENCE",
            "snowflake_schema": "AGENTS",
            "agent_name": "OMNI_DOCUMENTS_ANALYST_AGENT"
          }
        }
      }
    ],
    "Cortex Search": [
      {
        "json": {
          "output": [
            {
              "document_id": "de229002",
              "document_name": "Customer: Customer Breakdown",
              "scope": "organization",
              "has_dashboard": true,
              "folder_id": "3d5676c9-be8d-47fd-b268-8beae0430608",
              "folder_name": "Customer Experience",
              "folder_path": "customer-experience"
            },
            {
              "document_id": "3bd15a19",
              "document_name": "Overview: Customer Account Engagement",
              "scope": "organization",
              "has_dashboard": true,
              "folder_id": "3089bcee-baea-45af-8613-63077f0e9417",
              "folder_name": "Marketing",
              "folder_path": "marketing"
            },
            {
              "document_id": "c4d4e6ec",
              "document_name": "Customer: Research Report",
              "scope": "organization",
              "has_dashboard": true,
              "folder_id": "3089bcee-baea-45af-8613-63077f0e9417",
              "folder_name": "Marketing",
              "folder_path": "marketing"
            }
          ]
        }
      }
    ],
    "AI Agent1": [
      {
        "json": {
          "output": {
            "message": "Hey Nathan Kwok,\n\nHere are the dashboards you requested:\n• <https://cribl.omniapp.co/dashboards/de229002|Customer: Customer Breakdown> in <https://cribl.omniapp.co/f/customer-experience|Customer Experience>\n• <https://cribl.omniapp.co/dashboards/3bd15a19|Overview: Customer Account Engagement> in <https://cribl.omniapp.co/f/marketing|Marketing>\n• <https://cribl.omniapp.co/dashboards/c4d4e6ec|Customer: Research Report> in <https://cribl.omniapp.co/f/marketing|Marketing>\n\nLet me know if you need anything else!",
            "dashboard_urls": [
              "https://cribl.omniapp.co/dashboards/de229002",
              "https://cribl.omniapp.co/dashboards/3bd15a19",
              "https://cribl.omniapp.co/dashboards/c4d4e6ec"
            ],
            "folder_urls": [
              "https://cribl.omniapp.co/f/customer-experience",
              "https://cribl.omniapp.co/f/marketing",
              "https://cribl.omniapp.co/f/marketing"
            ]
          }
        }
      }
    ]
  },
  "versionId": "6aecda92-2e60-4a45-bcf2-388f274ad2c7",
  "triggerCount": 1,
  "shared": [
    {
      "createdAt": "2025-09-03T08:29:23.372Z",
      "updatedAt": "2025-09-03T08:29:23.372Z",
      "role": "workflow:owner",
      "workflowId": "onEJNvmxhmWCE8mY",
      "projectId": "w7JTueqTYNrmBYZn"
    }
  ],
  "tags": []
}