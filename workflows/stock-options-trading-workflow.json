{
  "createdAt": "2025-01-03T12:00:00.000Z",
  "updatedAt": "2025-01-03T12:00:00.000Z",
  "id": "stock-options-trading-main",
  "name": "Stock Options Trading - Delta Neutral Strategy",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "0 9,15 * * 1-5"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [0, 0],
      "id": "schedule-trigger-main",
      "name": "Market Hours Trigger",
      "notes": "Triggers at 9 AM and 3 PM EST on weekdays (market open/close)"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "max-symbols-per-batch",
              "name": "max_symbols_per_batch",
              "value": 5,
              "type": "number"
            },
            {
              "id": "max-parallel-agents",
              "name": "max_parallel_agents", 
              "value": 3,
              "type": "number"
            },
            {
              "id": "risk-tolerance",
              "name": "risk_tolerance",
              "value": 0.02,
              "type": "number"
            },
            {
              "id": "max-position-size",
              "name": "max_position_size",
              "value": 1000,
              "type": "number"
            },
            {
              "id": "target-delta",
              "name": "target_delta",
              "value": 0.0,
              "type": "number"
            },
            {
              "id": "execution-timestamp",
              "name": "execution_timestamp",
              "value": "={{ $now.format('yyyy-MM-dd HH:mm:ss') }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [240, 0],
      "id": "global-variables-set",
      "name": "Set Global Variables",
      "notes": "Configure workflow parameters and risk management settings",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Retrieve a dynamic list of liquid stock symbols for options analysis. Filter for symbols with high volume and options activity. Return a JSON array of 15-25 symbols suitable for delta neutral strategies. Focus on large-cap stocks with active options markets.\n\nCurrent execution timestamp: {{ $('Set Global Variables').item.json.execution_timestamp }}\nRisk tolerance: {{ $('Set Global Variables').item.json.risk_tolerance }}\nMax position size: {{ $('Set Global Variables').item.json.max_position_size }}",
        "options": {
          "systemMessage": "You are the main orchestrator for an automated stock options trading system focused on delta neutral strategies. Your primary responsibilities are:\n\n1. **Symbol Selection**: Retrieve dynamic lists of liquid stocks suitable for options trading\n2. **Coordination**: Manage the flow between analysis subagents and validation\n3. **Risk Management**: Ensure all trades align with risk tolerance parameters\n4. **Trade Execution**: Execute approved trades through broker APIs\n5. **Monitoring**: Track portfolio delta and overall performance\n\nYou have access to financial data MCP servers for symbol screening and market data. Always prioritize risk management and ensure delta neutral positioning. Only work with highly liquid stocks that have active options markets.\n\nIMPORTANT: Return symbol lists as clean JSON arrays without any markdown formatting or additional text.",
          "temperature": 0.2,
          "maxTokens": 1000
        },
        "tools": {
          "values": [
            {
              "name": "financial-data-mcp",
              "description": "Financial data MCP server for symbol screening and market data"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [480, 0],
      "id": "orchestrator-agent-main",
      "name": "Orchestrator Agent",
      "notes": "Main coordinator for symbol retrieval and workflow management",
      "alwaysOutputData": true,
      "continueOnFail": false,
      "retryOnFail": true,
      "maxTries": 3
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "symbol-list-parsed",
              "name": "symbols",
              "value": "={{ JSON.parse($json.output) }}",
              "type": "array"
            },
            {
              "id": "batch-size",
              "name": "batch_size",
              "value": "={{ $('Set Global Variables').item.json.max_symbols_per_batch }}",
              "type": "number"
            },
            {
              "id": "total-symbols",
              "name": "total_symbols",
              "value": "={{ JSON.parse($json.output).length }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [720, 0],
      "id": "symbol-list-processor",
      "name": "Process Symbol List",
      "notes": "Parse orchestrator output and prepare for batch processing",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "batchSize": "={{ $json.batch_size }}",
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [960, 0],
      "id": "symbol-batch-splitter",
      "name": "Split Symbol Batches",
      "notes": "Split symbols into smaller batches for parallel processing",
      "executeOnce": false,
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Analyze options for the following symbols: {{ $json.symbols.join(', ') }}\n\nFor each symbol, perform comprehensive delta neutral options analysis:\n\n1. **Fetch Options Chain**: Get current options chain data with all strikes and expiries\n2. **Calculate Greeks**: Delta, gamma, theta, vega for all options\n3. **Implied Volatility Analysis**: Compare market IV to historical volatility\n4. **Delta Neutral Opportunities**: Identify specific strategies:\n   - Long/Short Straddles\n   - Long/Short Strangles  \n   - Iron Condors\n   - Butterfly Spreads\n5. **Risk Assessment**: Calculate profit potential, maximum loss, breakeven points\n\nReturn results as structured JSON for each symbol with the following format:\n{\n  \"symbol\": \"AAPL\",\n  \"current_price\": 150.25,\n  \"options_data\": {...},\n  \"delta_neutral_opportunities\": [\n    {\n      \"strategy\": \"long_straddle\",\n      \"strike\": 150,\n      \"expiry\": \"2025-01-17\", \n      \"delta\": 0.02,\n      \"implied_volatility\": 0.25,\n      \"profit_potential\": 0.15,\n      \"risk_score\": 0.3,\n      \"max_loss\": 500,\n      \"breakeven_upper\": 155,\n      \"breakeven_lower\": 145\n    }\n  ]\n}",
        "options": {
          "systemMessage": "You are a delta neutral options analysis specialist. Your expertise includes:\n\n**Core Competencies:**\n- Options pricing models (Black-Scholes, Binomial)\n- Greeks calculation and interpretation\n- Implied volatility analysis and forecasting\n- Delta neutral strategy construction\n- Risk management and position sizing\n\n**Analysis Framework:**\n1. **Data Retrieval**: Use MCP tools to fetch real-time options chains\n2. **Greeks Analysis**: Calculate and interpret delta, gamma, theta, vega\n3. **Strategy Identification**: Find delta neutral opportunities with attractive risk/reward\n4. **Risk Assessment**: Evaluate maximum loss, profit potential, and probability of success\n\n**Key Strategies to Focus On:**\n- **Straddles/Strangles**: Volatility plays with neutral market direction bias\n- **Iron Condors**: Range-bound strategies with limited risk\n- **Butterfly Spreads**: Low-cost, limited risk/reward strategies\n\n**Decision Criteria:**\n- Target delta: Â±0.05 (near neutral)\n- Minimum profit potential: 10%\n- Maximum risk score: 0.5\n- Preferred expiry: 30-60 days\n\nAlways return clean JSON without markdown formatting.",
          "temperature": 0.3,
          "maxTokens": 2000
        },
        "tools": {
          "values": [
            {
              "name": "options-data-mcp",
              "description": "Options chain data and Greeks calculation"
            },
            {
              "name": "financial-pricing-mcp", 
              "description": "Real-time pricing and implied volatility analysis"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [1200, -100],
      "id": "analysis-subagent-1",
      "name": "Options Analysis Subagent 1",
      "notes": "Delta neutral options analysis for symbol batch",
      "alwaysOutputData": true,
      "continueOnFail": true,
      "retryOnFail": true,
      "maxTries": 2
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Analyze options for the following symbols: {{ $json.symbols.join(', ') }}\n\nFor each symbol, perform comprehensive delta neutral options analysis:\n\n1. **Fetch Options Chain**: Get current options chain data with all strikes and expiries\n2. **Calculate Greeks**: Delta, gamma, theta, vega for all options\n3. **Implied Volatility Analysis**: Compare market IV to historical volatility\n4. **Delta Neutral Opportunities**: Identify specific strategies:\n   - Long/Short Straddles\n   - Long/Short Strangles  \n   - Iron Condors\n   - Butterfly Spreads\n5. **Risk Assessment**: Calculate profit potential, maximum loss, breakeven points\n\nReturn results as structured JSON for each symbol with the following format:\n{\n  \"symbol\": \"AAPL\",\n  \"current_price\": 150.25,\n  \"options_data\": {...},\n  \"delta_neutral_opportunities\": [\n    {\n      \"strategy\": \"long_straddle\",\n      \"strike\": 150,\n      \"expiry\": \"2025-01-17\", \n      \"delta\": 0.02,\n      \"implied_volatility\": 0.25,\n      \"profit_potential\": 0.15,\n      \"risk_score\": 0.3,\n      \"max_loss\": 500,\n      \"breakeven_upper\": 155,\n      \"breakeven_lower\": 145\n    }\n  ]\n}",
        "options": {
          "systemMessage": "You are a delta neutral options analysis specialist. Your expertise includes:\n\n**Core Competencies:**\n- Options pricing models (Black-Scholes, Binomial)\n- Greeks calculation and interpretation\n- Implied volatility analysis and forecasting\n- Delta neutral strategy construction\n- Risk management and position sizing\n\n**Analysis Framework:**\n1. **Data Retrieval**: Use MCP tools to fetch real-time options chains\n2. **Greeks Analysis**: Calculate and interpret delta, gamma, theta, vega\n3. **Strategy Identification**: Find delta neutral opportunities with attractive risk/reward\n4. **Risk Assessment**: Evaluate maximum loss, profit potential, and probability of success\n\n**Key Strategies to Focus On:**\n- **Straddles/Strangles**: Volatility plays with neutral market direction bias\n- **Iron Condors**: Range-bound strategies with limited risk\n- **Butterfly Spreads**: Low-cost, limited risk/reward strategies\n\n**Decision Criteria:**\n- Target delta: Â±0.05 (near neutral)\n- Minimum profit potential: 10%\n- Maximum risk score: 0.5\n- Preferred expiry: 30-60 days\n\nAlways return clean JSON without markdown formatting.",
          "temperature": 0.3,
          "maxTokens": 2000
        },
        "tools": {
          "values": [
            {
              "name": "options-data-mcp",
              "description": "Options chain data and Greeks calculation"
            },
            {
              "name": "financial-pricing-mcp", 
              "description": "Real-time pricing and implied volatility analysis"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [1200, 0],
      "id": "analysis-subagent-2",
      "name": "Options Analysis Subagent 2",
      "notes": "Delta neutral options analysis for symbol batch",
      "alwaysOutputData": true,
      "continueOnFail": true,
      "retryOnFail": true,
      "maxTries": 2
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Analyze options for the following symbols: {{ $json.symbols.join(', ') }}\n\nFor each symbol, perform comprehensive delta neutral options analysis:\n\n1. **Fetch Options Chain**: Get current options chain data with all strikes and expiries\n2. **Calculate Greeks**: Delta, gamma, theta, vega for all options\n3. **Implied Volatility Analysis**: Compare market IV to historical volatility\n4. **Delta Neutral Opportunities**: Identify specific strategies:\n   - Long/Short Straddles\n   - Long/Short Strangles  \n   - Iron Condors\n   - Butterfly Spreads\n5. **Risk Assessment**: Calculate profit potential, maximum loss, breakeven points\n\nReturn results as structured JSON for each symbol with the following format:\n{\n  \"symbol\": \"AAPL\",\n  \"current_price\": 150.25,\n  \"options_data\": {...},\n  \"delta_neutral_opportunities\": [\n    {\n      \"strategy\": \"long_straddle\",\n      \"strike\": 150,\n      \"expiry\": \"2025-01-17\", \n      \"delta\": 0.02,\n      \"implied_volatility\": 0.25,\n      \"profit_potential\": 0.15,\n      \"risk_score\": 0.3,\n      \"max_loss\": 500,\n      \"breakeven_upper\": 155,\n      \"breakeven_lower\": 145\n    }\n  ]\n}",
        "options": {
          "systemMessage": "You are a delta neutral options analysis specialist. Your expertise includes:\n\n**Core Competencies:**\n- Options pricing models (Black-Scholes, Binomial)\n- Greeks calculation and interpretation\n- Implied volatility analysis and forecasting\n- Delta neutral strategy construction\n- Risk management and position sizing\n\n**Analysis Framework:**\n1. **Data Retrieval**: Use MCP tools to fetch real-time options chains\n2. **Greeks Analysis**: Calculate and interpret delta, gamma, theta, vega\n3. **Strategy Identification**: Find delta neutral opportunities with attractive risk/reward\n4. **Risk Assessment**: Evaluate maximum loss, profit potential, and probability of success\n\n**Key Strategies to Focus On:**\n- **Straddles/Strangles**: Volatility plays with neutral market direction bias\n- **Iron Condors**: Range-bound strategies with limited risk\n- **Butterfly Spreads**: Low-cost, limited risk/reward strategies\n\n**Decision Criteria:**\n- Target delta: Â±0.05 (near neutral)\n- Minimum profit potential: 10%\n- Maximum risk score: 0.5\n- Preferred expiry: 30-60 days\n\nAlways return clean JSON without markdown formatting.",
          "temperature": 0.3,
          "maxTokens": 2000
        },
        "tools": {
          "values": [
            {
              "name": "options-data-mcp",
              "description": "Options chain data and Greeks calculation"
            },
            {
              "name": "financial-pricing-mcp", 
              "description": "Real-time pricing and implied volatility analysis"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [1200, 100],
      "id": "analysis-subagent-3",
      "name": "Options Analysis Subagent 3",
      "notes": "Delta neutral options analysis for symbol batch",
      "alwaysOutputData": true,
      "continueOnFail": true,
      "retryOnFail": true,
      "maxTries": 2
    },
    {
      "parameters": {
        "mode": "append",
        "advanced": false,
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [1480, 0],
      "id": "merge-analysis-results",
      "name": "Merge Analysis Results",
      "notes": "Combine results from all analysis subagents",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Perform comprehensive risk assessment and validation of the following delta neutral opportunities:\n\n{{ JSON.stringify($input.all()) }}\n\n**Risk Assessment Criteria:**\n\n1. **Portfolio Delta Analysis**\n   - Calculate combined portfolio delta\n   - Ensure overall position remains near neutral (Â±0.05)\n   - Assess delta sensitivity to market movements\n\n2. **Position Sizing Validation**\n   - Check individual position sizes against limits\n   - Verify maximum position size: {{ $('Set Global Variables').item.json.max_position_size }}\n   - Ensure proper diversification across symbols\n\n3. **Risk Scoring**\n   - Evaluate maximum loss potential\n   - Assess probability of profit\n   - Check risk/reward ratios\n   - Maximum acceptable risk score: 0.5\n\n4. **Market Conditions Check**\n   - Verify market hours and liquidity\n   - Check for upcoming earnings or events\n   - Assess overall market volatility\n\n**Approval Criteria:**\n- Minimum profit potential: 10%\n- Maximum portfolio delta: Â±0.05\n- Risk score â¤ 0.5\n- Adequate liquidity and volume\n- Position size within limits\n\nReturn a JSON object with:\n```json\n{\n  \"approved_opportunities\": [...],\n  \"rejected_opportunities\": [...],\n  \"risk_assessment\": {\n    \"portfolio_delta\": 0.01,\n    \"total_capital_required\": 5000,\n    \"max_loss_potential\": 1000,\n    \"diversification_score\": 0.8,\n    \"overall_risk_score\": 0.3\n  },\n  \"recommendations\": \"...\"\n}\n```",
        "options": {
          "systemMessage": "You are a senior risk assessment specialist for options trading with expertise in:\n\n**Risk Management:**\n- Portfolio delta calculation and hedging\n- Position sizing and capital allocation\n- Stress testing and scenario analysis\n- Regulatory compliance and risk limits\n\n**Validation Framework:**\n1. **Quantitative Analysis**: Mathematical risk models and calculations\n2. **Qualitative Assessment**: Market conditions and trading environment\n3. **Compliance Check**: Regulatory requirements and internal policies\n4. **Performance Optimization**: Risk-adjusted return maximization\n\n**Key Responsibilities:**\n- Approve/reject trading opportunities based on strict criteria\n- Calculate portfolio-level risk metrics\n- Ensure proper diversification and position sizing\n- Monitor for correlation and concentration risks\n- Maintain delta neutral positioning\n\n**Decision Framework:**\n- APPROVE: Low risk, high probability opportunities with good risk/reward\n- CONDITIONAL: Opportunities requiring position size adjustment\n- REJECT: High risk, poor risk/reward, or limit violations\n\nAlways prioritize capital preservation while seeking attractive risk-adjusted returns. Be conservative in uncertain market conditions.",
          "temperature": 0.2,
          "maxTokens": 1500
        },
        "tools": {
          "values": [
            {
              "name": "risk-analysis-mcp",
              "description": "Advanced risk calculation and portfolio analysis tools"
            },
            {
              "name": "market-conditions-mcp",
              "description": "Real-time market conditions and volatility analysis"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [1720, 0],
      "id": "validator-agent-risk",
      "name": "Risk Validator Agent",
      "notes": "Risk assessment and opportunity validation specialist",
      "alwaysOutputData": true,
      "continueOnFail": false,
      "retryOnFail": true,
      "maxTries": 2
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "approved-opportunities-exist",
              "leftValue": "={{ JSON.parse($json.output).approved_opportunities.length }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [1960, 0],
      "id": "check-approved-opportunities",
      "name": "Check Approved Opportunities",
      "notes": "Only proceed if there are approved trading opportunities",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Execute the following approved delta neutral trading opportunities:\n\n{{ JSON.stringify(JSON.parse($('Risk Validator Agent').item.json.output).approved_opportunities) }}\n\n**Execution Requirements:**\n\n1. **Pre-Trade Validation**\n   - Verify market hours (9:30 AM - 4:00 PM EST)\n   - Check account balance and buying power\n   - Confirm option chain availability and pricing\n   - Validate position limits\n\n2. **Order Management**\n   - Place orders in logical sequence for multi-leg strategies\n   - Use limit orders with appropriate pricing\n   - Monitor fill status and adjust if needed\n   - Implement proper timing for simultaneous execution\n\n3. **Risk Controls**\n   - Verify final delta neutrality before execution\n   - Double-check position sizing\n   - Confirm stop-loss and profit targets\n   - Monitor margin requirements\n\n4. **Execution Monitoring**\n   - Track order fills in real-time\n   - Calculate actual delta after execution\n   - Log all trade details\n   - Update portfolio positions\n\n**Broker Integration:**\n- Use appropriate broker MCP (Alpaca, TastyTrade, Interactive Brokers)\n- Handle partial fills gracefully\n- Implement proper error handling\n- Maintain audit trail\n\nReturn execution results as:\n```json\n{\n  \"executed_trades\": [...],\n  \"failed_trades\": [...],\n  \"portfolio_delta\": 0.01,\n  \"total_capital_used\": 5000,\n  \"execution_summary\": \"...\"\n}\n```",
        "options": {
          "systemMessage": "You are a professional options trade execution specialist with expertise in:\n\n**Trade Execution:**\n- Multi-leg options strategies (straddles, strangles, spreads)\n- Market timing and order management\n- Real-time risk monitoring\n- Broker API integration\n\n**Risk Management:**\n- Delta hedging and portfolio balancing\n- Position sizing and margin calculations\n- Stop-loss and profit target implementation\n- Emergency position unwinding\n\n**Technical Integration:**\n- Broker MCP server communication\n- Order routing and execution algorithms\n- Real-time market data processing\n- Portfolio management systems\n\n**Execution Priorities:**\n1. **Safety First**: Never exceed risk limits or position sizes\n2. **Delta Neutral**: Maintain portfolio delta near zero\n3. **Efficient Execution**: Minimize slippage and timing risk\n4. **Complete Documentation**: Log all trades and decisions\n\n**Error Handling:**\n- Gracefully handle broker connection issues\n- Implement fallback execution methods\n- Alert on critical failures\n- Maintain position integrity\n\nOnly execute trades that meet all validation criteria. When in doubt, preserve capital and alert for manual review.",
          "temperature": 0.1,
          "maxTokens": 1000
        },
        "tools": {
          "values": [
            {
              "name": "broker-execution-mcp",
              "description": "Broker API for trade execution (Alpaca, TastyTrade, IB)"
            },
            {
              "name": "portfolio-management-mcp",
              "description": "Portfolio tracking and position management"
            },
            {
              "name": "market-data-mcp",
              "description": "Real-time market data and pricing"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [2200, 0],
      "id": "trade-execution-agent",
      "name": "Trade Execution Agent",
      "notes": "Execute approved trades through broker APIs",
      "alwaysOutputData": true,
      "continueOnFail": true,
      "retryOnFail": true,
      "maxTries": 1
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "execution-timestamp",
              "name": "execution_timestamp",
              "value": "={{ $now.format('yyyy-MM-dd HH:mm:ss') }}",
              "type": "string"
            },
            {
              "id": "workflow-status",
              "name": "workflow_status",
              "value": "={{ $('Trade Execution Agent').item ? 'completed_with_trades' : 'completed_no_trades' }}",
              "type": "string"
            },
            {
              "id": "total-symbols-processed",
              "name": "total_symbols_processed",
              "value": "={{ $('Process Symbol List').item.json.total_symbols }}",
              "type": "number"
            },
            {
              "id": "approved-opportunities",
              "name": "approved_opportunities_count",
              "value": "={{ JSON.parse($('Risk Validator Agent').item.json.output).approved_opportunities.length }}",
              "type": "number"
            },
            {
              "id": "execution-summary",
              "name": "execution_summary",
              "value": "={{ $('Trade Execution Agent').item ? JSON.parse($('Trade Execution Agent').item.json.output).execution_summary : 'No trades executed - no approved opportunities' }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [2440, 0],
      "id": "execution-logger",
      "name": "Execution Logger",
      "notes": "Log workflow execution results and performance metrics",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "no-opportunities-timestamp",
              "name": "execution_timestamp",
              "value": "={{ $now.format('yyyy-MM-dd HH:mm:ss') }}",
              "type": "string"
            },
            {
              "id": "no-opportunities-status",
              "name": "workflow_status",
              "value": "completed_no_opportunities",
              "type": "string"
            },
            {
              "id": "no-opportunities-symbols",
              "name": "total_symbols_processed",
              "value": "={{ $('Process Symbol List').item.json.total_symbols }}",
              "type": "number"
            },
            {
              "id": "no-opportunities-message",
              "name": "execution_summary",
              "value": "No delta neutral opportunities met risk criteria",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [1960, 200],
      "id": "no-opportunities-logger",
      "name": "No Opportunities Logger",
      "notes": "Log when no trading opportunities are found",
      "alwaysOutputData": true
    }
  ],
  "connections": {
    "Market Hours Trigger": {
      "main": [[{
        "node": "Set Global Variables",
        "type": "main",
        "index": 0
      }]]
    },
    "Set Global Variables": {
      "main": [[{
        "node": "Orchestrator Agent",
        "type": "main",
        "index": 0
      }]]
    },
    "Orchestrator Agent": {
      "main": [[{
        "node": "Process Symbol List",
        "type": "main",
        "index": 0
      }]]
    },
    "Process Symbol List": {
      "main": [[{
        "node": "Split Symbol Batches",
        "type": "main",
        "index": 0
      }]]
    },
    "Split Symbol Batches": {
      "main": [[
        {
          "node": "Options Analysis Subagent 1",
          "type": "main",
          "index": 0
        },
        {
          "node": "Options Analysis Subagent 2", 
          "type": "main",
          "index": 0
        },
        {
          "node": "Options Analysis Subagent 3",
          "type": "main",
          "index": 0
        }
      ]]
    },
    "Options Analysis Subagent 1": {
      "main": [[{
        "node": "Merge Analysis Results",
        "type": "main",
        "index": 0
      }]]
    },
    "Options Analysis Subagent 2": {
      "main": [[{
        "node": "Merge Analysis Results",
        "type": "main",
        "index": 1
      }]]
    },
    "Options Analysis Subagent 3": {
      "main": [[{
        "node": "Merge Analysis Results",
        "type": "main",
        "index": 2
      }]]
    },
    "Merge Analysis Results": {
      "main": [[{
        "node": "Risk Validator Agent",
        "type": "main",
        "index": 0
      }]]
    },
    "Risk Validator Agent": {
      "main": [[{
        "node": "Check Approved Opportunities",
        "type": "main",
        "index": 0
      }]]
    },
    "Check Approved Opportunities": {
      "main": [
        [{
          "node": "Trade Execution Agent",
          "type": "main",
          "index": 0
        }],
        [{
          "node": "No Opportunities Logger",
          "type": "main",
          "index": 0
        }]
      ]
    },
    "Trade Execution Agent": {
      "main": [[{
        "node": "Execution Logger",
        "type": "main",
        "index": 0
      }]]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": false
  },
  "pinData": {},
  "versionId": "initial-version",
  "triggerCount": 0,
  "tags": ["trading", "options", "delta-neutral", "automated"]
}