{"createdAt":"2025-06-10T22:53:36.297Z","updatedAt":"2025-06-16T07:57:47.070Z","id":"wruIwybajv1jOFAD","name":"My workflow","active":false,"isArchived":false,"nodes":[{"parameters":{"rule":{"interval":[{},{}]}},"type":"n8n-nodes-base.scheduleTrigger","typeVersion":1.2,"position":[0,0],"id":"3559f73a-eeb4-42c4-a3b1-0b569e7f6c1a","name":"Schedule Trigger","disabled":true},{"parameters":{"language":"python","pythonCode":"import time\nimport base64\nimport json\nfrom cryptography.hazmat.primitives.serialization import load_pem_private_key\nfrom cryptography.hazmat.primitives.asymmetric import padding\nfrom cryptography.hazmat.primitives import hashes\n\n# Helper to base64-url encode (no padding)\ndef b64url(data):\n    return base64.urlsafe_b64encode(data).rstrip(b'=')\n\n# Inputs: adjust for n8n variables if needed\nusername = \"nkwok\"    # e.g., 'MYUSER'\naccount = \"qqa43113.us-west-2.privatelink\"      # e.g., 'myorg-myaccount'\nprivate_key_str = \"\"\"-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDP/mW46Z4Pw8/i\nkWWzlqdnzXnRtxJsa0Xt3fpM+votaRFOWZXMowYZfsT8GqD/zVqzoHr8Sig0lGAx\nxq+/ALCas1PDr68K3/rs7KCIcdeA3v9RW7+FRhqHpofQw+4UXnGqAq/4YhjshrZM\nGqnxt44Q4UF2HhNVFKIMx/CbowP2vq9mKyEQWfv48c4xEdQC2/07OkLjFtLjCQrX\n69RmX7lWPVM8IcFwVxFwvMybf2v3uYsqoWsn/S5Lazi+iY8wT1NA5vbwDIV7fN6c\nGKp5N90lAYCWwZ4ah1Fk/mdOoMjoLTeuK+S12Pj92E4cicbbXvL3s8qHBGW37+1S\nqnWwo51NAgMBAAECggEAFVJDSY2CkKQmhdfDdgGeFJPUMTgpRn2dVAZ6zPRiEVCh\ndQeARdN6YcJZ3WwPZVmUOttbGsyxSr6LuTPgZTM5Z1+1rlbZRJie8jWe4+MjpR12\n98ybbpqNSAA9ZkcHe1q5H8/vC7ERVAHKjd+ihy76pxFS8rxKMrZkQZd8uz+ekucG\nvgZuzfqEWS3zyxYf54qXnWUG3tVv/5PP0CHcnXhAsJQBvFEq2jgxcl4B2agEeqwr\nfNR10k7U9un7J6NsSTREN0TDlsrbuu057mCQhfyzw80VO2nCTG8AoIJyJ5Pb1d4n\nYxnM3fkriIGF9gDXEbKZ7QbJc0Z1YxZX4VEA1PxKgwKBgQD64+Fj2Wkf1gKfGMTF\nJsgMBksVs2eG4qTw6SKRDUUgGHtA2+427BHgHmf2qwzZcWXqd7vag3ts7vcFpGAy\nwaqrOHzuL4RomPDO/r76pwxCdGZ7bPZ/G19jL0kHtPF/fwS8N7HBdxllIoxetXIb\nfWr6DqMcP9QVNW3uU3BtXJ89IwKBgQDUOtvUdMFHZxZlTHiC8tIb2PRfyh16t+19\nLlb37+SXKiHvAFzuF0yULZLrqNojaGU2tt/ZiOmbsnKb+H+l1n3jDqHtiUFPy8FY\nLTFjNSdgrIV2vLxG9/FKg442sWrsFnnFW+XLLc15IatSOOjfd/qhNjbwkRq78mcO\nf/iUmG/6zwKBgQDPH0H7hIjc13jijzgi6plMFAX4rFtTZ9hzaoQ265WdoZhfOzG1\n9b3sIC4D3cKF4LAamS5kfxduHvmflsw0Gt4i7Ed2+5N8Jobm3DgeBbqBQkc4rgPx\ne0+MOoU375FPiDUIjZIZ/ZDhhVwM9A5301p1hY/yyl70A1/12LyADG8JsQKBgQCP\n+qJafx8EvuYNsRRs2ik6pTQcrDTVpWQjscVkjUYKW5YL27Yv/HSCbmynHbVnohJQ\nTT6OCPlbHHPuZmbK7joXST0Htj8t0HCJzpcb09q0FjaxOBePGfSDdb6MUk7Ufeb8\nwnyiG5+zFulwbZVmzbGlnu8kw3xcl3Xc+2p7/PKzNwKBgAXi7ChohuXfMSTgUZed\n8D7jAxCGojSs+GB/ZIpJRKwbdUrxWSIQVfNVbLf/m6sEyCKJHJygFuwBm0JCEEUL\ndlO4LY7UpfcgZ5WtCLBXrRyMe8jaFfMdyBmwBHGSe8bdKNWhBQdRAByiBw0lQPsK\n5E4WiWPucZN9WeoMiA1A9yFL\n-----END PRIVATE KEY-----\"\"\"  # PEM string\n\n# JWT header and payload\nheader = {\"alg\": \"RS256\", \"typ\": \"JWT\"}\nnow = int(time.time())\npayload = {\n    \"iss\": f\"{account.upper()}.{username.upper()}.SHA256\",\n    \"sub\": f\"{account.upper()}.{username.upper()}\",\n    \"iat\": now,\n    \"exp\": now + 60\n}\n\n# Encode header & payload\nheader_b64 = b64url(json.dumps(header, separators=(',', ':')).encode())\npayload_b64 = b64url(json.dumps(payload, separators=(',', ':')).encode())\nmessage = header_b64 + b'.' + payload_b64\n\n# Load private key\nprivate_key = load_pem_private_key(\n    private_key_str.encode(),\n    password=None,\n)\n\n# Sign with RS256\nsignature = private_key.sign(\n    message,\n    padding.PKCS1v15(),\n    hashes.SHA256()\n)\nsignature_b64 = b64url(signature)\n\n# Assemble JWT\njwt_token = message + b'.' + signature_b64\n\n# Output as string\nreturn {\n    \"jwt_token\": jwt_token.decode()\n}"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[240,-220],"id":"8d489e44-458e-4e80-9cd0-e2bcea55f9b9","name":"Code","disabled":true},{"parameters":{"language":"python","pythonCode":"import requests\nimport json\n\nprint(requests)\ntoken = _input.first().json.snowflake_token\nbase_snowflake_url = \"https://qqa43113.snowflakecomputing.com\"\n\n\"\"\"Sends a prompt and chat history to the REST API.\"\"\"\nprompt = \"hello\"\n\nthis_message = [{\"role\": \"user\", \"content\": [{\"type\": \"text\", \"text\": prompt}]}]\n\nrequest_body = {\n  \"messages\": this_message,\n  \"model\": \"llama3.2-1b\",\n  \"temperature\": 0.4,\n  \"top_p\": 0.6,\n}\nprint(request_body)\n\nheaders={\n  # might need to change: https://docs.snowflake.com/en/user-guide/snowflake-cortex/cortex-rest-api#post-api-v2-cortex-inference-complete\n  # \"Authorization\": f'Snowflake Token=\"{session.connection._rest.token}\"',\n  \"Authorization\": f'Bearer {token}',\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json, text/event-stream\",\n}\nprint(headers)\n\nurl=f\"{base_snowflake_url}/api/v2/cortex/analyst/message\"\nurl=f\"{base_snowflake_url}/api/v2/cortex/inference:complete\"\nprint(url)\n\n# response = requests.post(\n#   url,\n#   json=request_body,\n#   headers=headers\n# )\n\n# # print(response.json())\n\n# request_id = response.headers.get(\"X-Snowflake-Request-Id\")\n# if response.status_code < 400:\n#   return {**response.json(), \"request_id\": request_id}\n# else:\n#   raise Exception(\n#       f\"Request failed (id: {request_id}) with status {response.status_code}: {response.text}\"\n#     )\n\n\n\nreturn {\n    \"response\": \"response\"\n}\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[520,-220],"id":"7e5ca177-2470-443f-95b2-15e36e6391e8","name":"Code2"},{"parameters":{"jsCode":"// import crypto from 'crypto';\nconst crypto = require('crypto');\n\n\nconst privateKeyString = `-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDP/mW46Z4Pw8/i\nkWWzlqdnzXnRtxJsa0Xt3fpM+votaRFOWZXMowYZfsT8GqD/zVqzoHr8Sig0lGAx\nxq+/ALCas1PDr68K3/rs7KCIcdeA3v9RW7+FRhqHpofQw+4UXnGqAq/4YhjshrZM\nGqnxt44Q4UF2HhNVFKIMx/CbowP2vq9mKyEQWfv48c4xEdQC2/07OkLjFtLjCQrX\n69RmX7lWPVM8IcFwVxFwvMybf2v3uYsqoWsn/S5Lazi+iY8wT1NA5vbwDIV7fN6c\nGKp5N90lAYCWwZ4ah1Fk/mdOoMjoLTeuK+S12Pj92E4cicbbXvL3s8qHBGW37+1S\nqnWwo51NAgMBAAECggEAFVJDSY2CkKQmhdfDdgGeFJPUMTgpRn2dVAZ6zPRiEVCh\ndQeARdN6YcJZ3WwPZVmUOttbGsyxSr6LuTPgZTM5Z1+1rlbZRJie8jWe4+MjpR12\n98ybbpqNSAA9ZkcHe1q5H8/vC7ERVAHKjd+ihy76pxFS8rxKMrZkQZd8uz+ekucG\nvgZuzfqEWS3zyxYf54qXnWUG3tVv/5PP0CHcnXhAsJQBvFEq2jgxcl4B2agEeqwr\nfNR10k7U9un7J6NsSTREN0TDlsrbuu057mCQhfyzw80VO2nCTG8AoIJyJ5Pb1d4n\nYxnM3fkriIGF9gDXEbKZ7QbJc0Z1YxZX4VEA1PxKgwKBgQD64+Fj2Wkf1gKfGMTF\nJsgMBksVs2eG4qTw6SKRDUUgGHtA2+427BHgHmf2qwzZcWXqd7vag3ts7vcFpGAy\nwaqrOHzuL4RomPDO/r76pwxCdGZ7bPZ/G19jL0kHtPF/fwS8N7HBdxllIoxetXIb\nfWr6DqMcP9QVNW3uU3BtXJ89IwKBgQDUOtvUdMFHZxZlTHiC8tIb2PRfyh16t+19\nLlb37+SXKiHvAFzuF0yULZLrqNojaGU2tt/ZiOmbsnKb+H+l1n3jDqHtiUFPy8FY\nLTFjNSdgrIV2vLxG9/FKg442sWrsFnnFW+XLLc15IatSOOjfd/qhNjbwkRq78mcO\nf/iUmG/6zwKBgQDPH0H7hIjc13jijzgi6plMFAX4rFtTZ9hzaoQ265WdoZhfOzG1\n9b3sIC4D3cKF4LAamS5kfxduHvmflsw0Gt4i7Ed2+5N8Jobm3DgeBbqBQkc4rgPx\ne0+MOoU375FPiDUIjZIZ/ZDhhVwM9A5301p1hY/yyl70A1/12LyADG8JsQKBgQCP\n+qJafx8EvuYNsRRs2ik6pTQcrDTVpWQjscVkjUYKW5YL27Yv/HSCbmynHbVnohJQ\nTT6OCPlbHHPuZmbK7joXST0Htj8t0HCJzpcb09q0FjaxOBePGfSDdb6MUk7Ufeb8\nwnyiG5+zFulwbZVmzbGlnu8kw3xcl3Xc+2p7/PKzNwKBgAXi7ChohuXfMSTgUZed\n8D7jAxCGojSs+GB/ZIpJRKwbdUrxWSIQVfNVbLf/m6sEyCKJHJygFuwBm0JCEEUL\ndlO4LY7UpfcgZ5WtCLBXrRyMe8jaFfMdyBmwBHGSe8bdKNWhBQdRAByiBw0lQPsK\n5E4WiWPucZN9WeoMiA1A9yFL\n-----END PRIVATE KEY-----`;\n\nconst account = 'qqa43113.us-west-2.privatelink'; // e.g., xy12345.us-east-1\nconst username = 'nkwok';\nconst publicKeyFingerprint = 'SHA256:your_public_key_fingerprint==';\nconst tokenLifetimeSeconds = 3600; // 1 hour\n\n// CONFIG\nconst EXPIRATION_SECS = 60 * 5; // 5 min\n\n// Helper: base64url encode\nfunction base64url(input) {\n  return Buffer.from(input)\n    .toString('base64')\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_')\n    .replace(/=+$/, '');\n}\n\n// Header + payload\nconst header = {\n  alg: \"RS256\",\n  typ: \"JWT\"\n};\n\nconst issuedAt = Math.floor(Date.now() / 1000);\nconst payload = {\n  iss: `${account.toUpperCase()}.${username.toUpperCase()}`, // e.g. XY12345.USERNAME\n  sub: `${account.toUpperCase()}.${username.toUpperCase()}`,\n  iat: issuedAt,\n  exp: issuedAt + EXPIRATION_SECS\n};\n\n// Create message\nconst headerB64 = base64url(JSON.stringify(header));\nconst payloadB64 = base64url(JSON.stringify(payload));\nconst msg = `${headerB64}.${payloadB64}`;\n\n// private key for signing\n\nconst sign = crypto.createSign('RSA-SHA256');\nsign.update(msg);\nsign.end();\n\nconst signatureB64 = base64url(sign.sign(privateKeyString));\n\n// Final JWT\nconst jwt = `${msg}.${signatureB64}`;\n\n// Output\nreturn [{ json: { snowflake_token: jwt } }];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[240,0],"id":"5e0f59c9-423a-4d0b-82c5-358d4c44ac37","name":"Get Snowflake Token"},{"parameters":{"jsCode":"const token = $input.first().json.snowflake_token;\nconst base_snowflake_url = \"https://qqa43113.snowflakecomputing.com\";\n\nconst prompt = \"hello\";\nconst this_message = [{\n  role: \"user\",\n  content: [\n    { type: \"text\", text: prompt }\n  ]\n}];\n\nconst request_body = {\n  messages: this_message,\n  model: \"llama3.2-1b\",\n  temperature: 0.4,\n  top_p: 0.6,\n};\n\nconst headers = {\n  \"Authorization\": `Bearer ${token}`,\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json, text/event-stream\",\n};\n\nconst url = `${base_snowflake_url}/api/v2/cortex/inference:complete`;\n\nlet response, responseBody, requestId;\n\ntry {\n  response = await $http.post(url, {\n    body: request_body,\n    headers,\n    responseType: 'json',\n    resolveWithFullResponse: true,\n  });\n  responseBody = response.data;\n  requestId = response.headers[\"x-snowflake-request-id\"];\n\n  return [{ ...responseBody, request_id: requestId }];\n\n} catch (error) {\n  requestId = error.response?.headers?.[\"x-snowflake-request-id\"];\n  throw new Error(`Request failed (id: ${requestId}) with status ${error.response?.status}: ${error.response?.data || error.message}`);\n}"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[520,0],"id":"49179d3c-8698-4c2a-833a-d0bc16ef310a","name":"Code1"},{"parameters":{"method":"POST","url":"https://qqa43113.snowflakecomputing.com/api/v2/cortex/inference:complete","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Authorization","value":"=Bearer {{ $('Get Snowflake Token').item.json.snowflake_token }}"},{"name":"Content-Type","value":"application/json"},{"name":"Accept","value":"application/json, text/event-stream"}]},"sendBody":true,"specifyBody":"json","jsonBody":"{\"messages\": [{\"role\": \"user\", \"content\": [{\"type\": \"text\", \"text\": \"hello\"}]}], \"model\": \"llama3.2-1b\", \"temperature\": 0.4, \"top_p\": 0.6}","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[520,220],"id":"0f2d0555-6525-4743-b4fd-708ca684207f","name":"HTTP Request"},{"parameters":{"httpMethod":"POST","path":"552bf657-141b-4beb-8ec4-63fdcfca5119","options":{"responseData":""}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[0,800],"id":"9ca235cd-a921-4646-b701-608aa8b961b9","name":"Webhook","webhookId":"552bf657-141b-4beb-8ec4-63fdcfca5119"},{"parameters":{"rule":{"interval":[{}]}},"type":"n8n-nodes-base.scheduleTrigger","typeVersion":1.2,"position":[0,520],"id":"7c38f20d-9900-4260-9dd8-81e8d7819fce","name":"Schedule Trigger1"},{"parameters":{"sendTo":"webhook@mailrelayer.xyz","subject":"Test","message":"I've customized your resume to the following job description","options":{"appendAttribution":false,"attachmentsUi":{"attachmentsBinary":[{}]}}},"type":"n8n-nodes-base.gmail","typeVersion":2.1,"position":[440,800],"id":"80ace482-bfaa-4f32-bba3-0fb91488b056","name":"Gmail","webhookId":"7a550d9c-d502-49f7-a233-6b56be4fbd1d","credentials":{"gmailOAuth2":{"id":"6qrDcdevVT45ACgs","name":"Gmail account"}}},{"parameters":{"htmlInput":"={{ $json.body.choices[0].message.content_list[0].text }}"},"type":"@custom-js/n8n-nodes-pdf-toolkit.html2Pdf","typeVersion":1,"position":[220,800],"id":"b8006afe-f627-49ba-8bc1-ff170ffde6a9","name":"HTML to PDF","credentials":{"customJsApi":{"id":"1ZhUlSEl03z8HPgJ","name":"customjs_0"}}},{"parameters":{"method":"POST","url":"https://app.hex.tech/api/v1/projects/01977137-3f12-700d-9e0e-b3d6043b711a/runs","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Authorization","value":"Bearer 8dcc029cc6e39dd312752dcf5e543b5c01386c3045bbf86f2cc1aa25a957e71152fc6bbc77356b58af670ff6622687bc"}]},"sendBody":true,"specifyBody":"json","jsonBody":"{\n  \"inputParams\": {\n    \"system_prompt\": \"<role>You are an expert recruiter and hiring manager.</role>\\n<task>Read and analyze the following job description, in HTML format, and the following resume, in HTML format. Then answer the following query.</task>\",\n    \"user_prompt\": \"<query>Does the candidate fit this job description? If not, why do they not fit?</query>\\n<job_description>\"\n  }\n\n}","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[220,520],"id":"927334df-e163-4506-88a7-f00c8e9b229b","name":"HTTP Request1","disabled":true},{"parameters":{"method":"POST","url":"https://app.hex.tech/api/v1/projects/01977137-3f12-700d-9e0e-b3d6043b711a/runs","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Authorization","value":"Bearer 8dcc029cc6e39dd312752dcf5e543b5c01386c3045bbf86f2cc1aa25a957e71152fc6bbc77356b58af670ff6622687bc"}]},"sendBody":true,"specifyBody":"json","jsonBody":"{\n  \"inputParams\": {\n    \"system_prompt\": \"<role>You are a helpful assistant.</role>\\n<task>Answer the following query from the user.</task>\",\n    \"user_prompt\": \"<query>hello</query>\"\n  }\n\n}","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[460,520],"id":"9f59b325-46b1-420c-9737-410b8e7fdc91","name":"HTTP Request2"}],"connections":{"Schedule Trigger":{"main":[[{"node":"Get Snowflake Token","type":"main","index":0},{"node":"Code","type":"main","index":0}]]},"Code":{"main":[[]]},"Get Snowflake Token":{"main":[[{"node":"Code2","type":"main","index":0},{"node":"Code1","type":"main","index":0},{"node":"HTTP Request","type":"main","index":0}]]},"Code1":{"main":[[]]},"Webhook":{"main":[[{"node":"HTML to PDF","type":"main","index":0}]]},"HTML to PDF":{"main":[[{"node":"Gmail","type":"main","index":0}]]},"Schedule Trigger1":{"main":[[{"node":"HTTP Request1","type":"main","index":0}]]},"HTTP Request1":{"main":[[{"node":"HTTP Request2","type":"main","index":0}]]}},"settings":{"executionOrder":"v1","callerPolicy":"workflowsFromSameOwner"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{"Webhook":[{"json":{"headers":{"host":"capable-glowworm-adjusted.ngrok-free.app","user-agent":"python-requests/2.32.3","content-length":"290","accept":"*/*","accept-encoding":"gzip, deflate","content-type":"application/json","x-forwarded-for":"3.129.36.245","x-forwarded-host":"capable-glowworm-adjusted.ngrok-free.app","x-forwarded-proto":"https"},"params":{},"query":{},"body":{"choices":[{"message":{"content":"Hello! How can I assist you today?","content_list":[{"type":"text","text":"Hello! How can I assist you today?"}]}}],"usage":{"prompt_tokens":21,"completion_tokens":10,"total_tokens":31},"request_id":"b698a346-e53d-4c1f-bfe0-94e280a8d2f1"},"webhookUrl":"http://localhost:5678/webhook-test/552bf657-141b-4beb-8ec4-63fdcfca5119","executionMode":"test"}}],"Gmail":[{"json":{"id":"197722bb769fe6e7","threadId":"197722bb769fe6e7","labelIds":["SENT","INBOX"]}}]},"versionId":"9c7eb033-f869-4ad2-bc4c-208d30e2e7c8","triggerCount":0,"tags":[]}